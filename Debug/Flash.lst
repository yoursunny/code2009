Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	//======================================================
                            	//  The information contained herein is the exclusive property of
                            	//  Sunnnorth Technology Co. And shall not be distributed, reproduced,
                            	//  or disclosed in whole in part without prior written permission.
                            	//             (C) COPYRIGHT 2003  SUNNORTH TECHNOLOGY CO.
                            	//                          ALL RIGHTS RESERVED
                            	//  The entire notice above must be reproduced on all authorized copies.
                            	//========================================================
                            	
                            	//======================================================
                            	// 文件名称：	flash.asm
                            	// 功能描述：	擦除、读、写子程序 
                            	// 维护记录：	2006-08-30	v1.0
                            	//======================================================
                            	
                            	.PUBLIC F_Flash_Erase
                            	.PUBLIC _Flash_Erase
                            	.PUBLIC F_Flash_WriteWord
                            	.PUBLIC _Flash_WriteWord
                            	.PUBLIC F_Flash_Write
                            	.PUBLIC _Flash_Write
                            	.PUBLIC F_Flash_ReadWord
                            	.PUBLIC _Flash_ReadWord
                            	.PUBLIC F_Flash_Read
                            	.PUBLIC _Flash_Read
                            	
                            	.DEFINE C_FLASH_SIZE			0x8000
                            	.DEFINE C_FLASH_BLOCK_SIZE		0x100 
                            	.DEFINE C_FLASH_MATCH			0xAAAA
                            	.DEFINE C_FLASH_PAGE_ERASE		0x5511		//erase 1 page
                            	.DEFINE C_FLASH_MASS_ERASE		0x5522		//only can execution on STOP=1
                            	.DEFINE C_FLASH_1WORD_PGM		0x5533		//write 1 word 
                            	.DEFINE C_FLASH_SEQUENT_PGM		0x5544		//write sequential word 
                            	.DEFINE P_Flash_Ctrl  			0x7555
                            	
0000AB56                    	.CODE
                            	//======================================================
                            	// 汇编格式：	F_Flash_WriteWord
                            	// C格式：		void Flash_WriteWord(unsigned int FlashAddr, unsigned int Data);
                            	// 实现功能：	写一个字到FLASH的指定地址中
                            	// 入口参数：	FlashAddr(r1) - 待写入Flash的地址
                            	//				Data(r2) - 待写入数据
                            	// 出口参数：	无
                            	// 破坏寄存器：	无
                            	//======================================================
                            	_Flash_WriteWord:
0000AB56 90 D4              		push r1, r2 to [sp]
0000AB57 08 03 05 00        		r1 = sp + 5						// 获得参数1
0000AB59 C1 92              		r1 = [r1]
0000AB5A 08 05 06 00        		r2 = sp + 6						// 获得参数2
0000AB5C C2 94              		r2 = [r2]
0000AB5D 40 F0 61 AB        		call F_Flash_WriteWord
0000AB5F 90 90              		pop r1, r2 from [sp]
0000AB60 90 9A              	retf
                            	
                            	F_Flash_WriteWord:
0000AB61 88 D6              		push r3 to [sp]
                            	
0000AB62 0B 97 AA AA        		r3 = C_FLASH_MATCH				// 0xAAAA
0000AB64 1B D7 55 75        		[P_Flash_Ctrl] = r3
0000AB66 0B 97 33 55        		r3 = C_FLASH_1WORD_PGM			// 0x5533
0000AB68 1B D7 55 75        		[P_Flash_Ctrl] = r3	
0000AB6A C1 D4              		[r1] = r2
                            	
0000AB6B 88 94              		pop r3 from [sp]
0000AB6C 90 9A              		retf
                            	
                            	//======================================================
                            	// 汇编格式：	F_Flash_Write
                            	// C格式：		void Flash_Write(unsigned int FlashAddr, unsigned int *DataBuf, unsigned int Count);
                            	// 实现功能：	写多个字到FLASH的中
                            	// 入口参数：	FlashAddr(r1) - 待写入Flash的地址
                            	//				DataBuf(r2) - 待写入数据的起始地址
                            	//				Count(r3) - 待写入数据的字数
                            	// 出口参数：	无
                            	// 破坏寄存器：	无
                            	//======================================================
                            	_Flash_Write:
0000AB6D 98 D6              		push r1, r3 to [sp]
0000AB6E 08 03 06 00        		r1 = sp + 6						// 获得参数1
0000AB70 C1 92              		r1 = [r1]
0000AB71 08 05 07 00        		r2 = sp + 7						// 获得参数2
0000AB73 C2 94              		r2 = [r2]
0000AB74 08 07 08 00        		r3 = sp + 8						// 获得参数3
0000AB76 C3 96              		r3 = [r3]
0000AB77 40 F0 7B AB        		call F_Flash_Write
0000AB79 98 90              		pop r1, r3 from [sp]
0000AB7A 90 9A              	retf	
                            	
                            	F_Flash_Write:
0000AB7B 90 D8              		push r3, r4 to [sp]
0000AB7C 0C 99 AA AA        		r4 = C_FLASH_MATCH				// 0x5511
0000AB7E 1C D9 55 75        		[P_Flash_Ctrl] = r4
                            	?Loop:	
0000AB80 0C 99 44 55        		r4 = C_FLASH_SEQUENT_PGM		// 0x5544
0000AB82 1C D9 55 75        		[P_Flash_Ctrl] = r4
0000AB84 D2 98              		r4 = [r2++]
0000AB85 D1 D8              		[r1++] = r4
0000AB86 41 26              		r3 -= 1
0000AB87 48 4E              		jnz ?Loop
0000AB88 90 94              		pop r3, r4 from [sp]
0000AB89 90 9A              	retf
                            	
                            	
                            	
                            	//======================================================
                            	// 汇编格式：	F_Flash_Erase
                            	// C格式：		void Flash_Erase(unsigned int FlashAddr);
                            	// 实现功能：	擦除指定地址所在的页
                            	// 入口参数：	FlashAddr(r1) - 待擦除页所在的Flash地址
                            	// 出口参数：	无
                            	// 破坏寄存器：	无
                            	//======================================================
                            	_Flash_Erase:
0000AB8A 88 D2              		push r1 to [sp]
0000AB8B 08 03 04 00        		r1 = sp + 4
0000AB8D C1 92              		r1 = [r1]
0000AB8E 40 F0 92 AB        		call F_Flash_Erase
0000AB90 88 90              		pop r1 from [sp]
0000AB91 90 9A              	retf
                            	
                            	F_Flash_Erase:
0000AB92 88 D4              		push r2 to [sp]
0000AB93 0A 95 AA AA        		r2 = C_FLASH_MATCH				//AAAA
0000AB95 1A D5 55 75        		[P_Flash_Ctrl] = r2
0000AB97 0A 95 11 55        		r2 = C_FLASH_PAGE_ERASE			//5511
0000AB99 1A D5 55 75        		[P_Flash_Ctrl] = r2
                            		
0000AB9B C1 D2              		[r1] = r1
0000AB9C 88 92              		pop r2 from [sp]
0000AB9D 90 9A              	retf
                            	
                            	//======================================================
                            	// 汇编格式：	F_Flash_ReadWord
                            	// C格式：		unsigned int Flash_ReadWord(unsigned int FlashAddr);
                            	// 实现功能：	读取Flash指定地址中的数据
                            	// 入口参数：	FlashAddr(r1) - Flash地址
                            	// 出口参数：	该地址中的数据
                            	// 破坏寄存器：	无
                            	//======================================================
                            	_Flash_ReadWord:
0000AB9E 08 03 03 00        		r1 = sp + 3
0000ABA0 C1 92              		r1 = [r1]
0000ABA1 40 F0 A4 AB        		call F_Flash_ReadWord
0000ABA3 90 9A              	retf
                            	
                            	F_Flash_ReadWord:
0000ABA4 C1 92              		r1 = [r1]
0000ABA5 90 9A              		retf
                            	
                            	//======================================================
                            	// 汇编格式：	F_Flash_Read
                            	// C格式：		unsigned int *Flash_Read(unsigned int FlashAddr, unsigned int *DataBuf, unsigned int Count);
                            	// 实现功能：	读取Flash指定起始地址的多个数据
                            	// 入口参数：	FlashAddr(r1) - 待读取Flash的起始地址
                            	//				DataBuf(r2) - 用于存储读到数据的Ram起始地址
                            	//				Count(r3) - 待读取数据的字数
                            	// 出口参数：	用于存储读到数据的Ram起始地址
                            	// 破坏寄存器：	无
                            	//======================================================
                            	_Flash_Read:
0000ABA6 98 D6              		push r1, r3 to [sp]
0000ABA7 08 03 06 00        		r1 = sp + 6						// 获得参数1
0000ABA9 C1 92              		r1 = [r1]
0000ABAA 08 05 07 00        		r2 = sp + 7						// 获得参数2
0000ABAC C2 94              		r2 = [r2]
0000ABAD 08 07 08 00        		r3 = sp + 8						// 获得参数3
0000ABAF C3 96              		r3 = [r3]
0000ABB0 40 F0 B4 AB        		call F_Flash_Read
0000ABB2 98 90              		pop r1, r3 from [sp]
0000ABB3 90 9A              	retf
                            	
                            	F_Flash_Read:
0000ABB4 90 D8              		push r3, r4 to [sp]
                            	?Loop:
0000ABB5 D1 98              		r4 = [r1++]	
0000ABB6 D2 D8              		[r2++] = r4
0000ABB7 41 26              		r3 -= 1
0000ABB8 44 4E              		jnz ?Loop
0000ABB9 90 94              		pop r3, r4 from [sp]
0000ABBA 90 9A              	retf
0 error(s), 0 warning(s).

