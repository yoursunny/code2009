Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\study\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccoTaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -Wall -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "D:/study/Sunplus/MMS/mms/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 3A 00
         2F 00 73 00
         74 00 75 00
         64 00 79 00
         2F 00 53 00
         75 00 6E 00
         70 00 6C 00
         75 00 73 00
         2F 00 4D 00
         4D 00 53 00
         2F 00 6D 00
         6D 00 73 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000A2D2                    	.code
00000032                    	.debug
00000032 2E 00 73 00        		.dw '.stabs "D:/study/Sunplus/MMS/mms/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 3A 00
         2F 00 73 00
         74 00 75 00
         64 00 79 00
         2F 00 53 00
         75 00 6E 00
         70 00 6C 00
         75 00 73 00
         2F 00 4D 00
         4D 00 53 00
         2F 00 6D 00
         6D 00 73 00
         2F 00 6D 00
         61 00 69 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000A2D2                    	.code
0000A2D2                    	.code
                            	Ltext0:
0000006A                    	.debug
0000006A 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
00000096                    	.debug
00000096 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
000000BC                    	.debug
000000BC 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
00000127                    	.debug
00000127 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
00000161                    	.debug
00000161 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
000001A1                    	.debug
000001A1 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
000001E0                    	.debug
000001E0 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
00000212                    	.debug
00000212 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
00000248                    	.debug
00000248 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
0000027E                    	.debug
0000027E 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
000002B1                    	.debug
000002B1 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
000002D7                    	.debug
000002D7 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
000002FE                    	.debug
000002FE 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
0000032A                    	.debug
0000032A 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
0000036B                    	.debug
0000036B 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
0000039A                    	.debug
0000039A 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
000003CA                    	.debug
000003CA 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A2D2                    	.CODE
000003FF                    	.debug
000003FF 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2D2                    	.CODE
0000A2D2                    	.code
0000041F                    	.debug
0000041F 2E 00 73 00        		.dw '.stabs "Delay:F19",36,0,0,',0,0,offset _Delay,seg _Delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000A2D2                    	.CODE
                            	.public _Delay
                            	_Delay:	.proc
0000043F                    	.debug
0000043F 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
00000452 00 00 00 00        		.dd LM1-_Delay
00000454 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2D2                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000A2D2 88 DA              		push bp to [sp]
0000A2D3 41 20              		sp-=1
0000A2D4 08 0B 01 00        		bp=sp+1
                            	
0000A2D6 0D 03 04 00        		R1=BP+4
00000456                    	.debug
00000456 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
00000469 06 00 00 00        		.dd LM2-_Delay
0000046B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2D8                    	.code
                            	LM2:
                            	LBB2:
0000046D                    	.debug
0000046D 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
00000480 06 00 00 00        		.dd LM3-_Delay
00000482 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2D8                    	.code
                            	LM3:
0000A2D8 40 94              		R2=0	// QImode move
0000A2D9 C5 D4              		[BP]=R2	// QImode move
                            	L3:
0000A2DA C5 94              		R2=[BP]	// QImode move
0000A2DB 0A 45 E8 03        		CMP R2,1000	// QImode compare
0000A2DD 04 8E 01 EE        		NSJNA L6	//QImode LEU
         00 EE      
0000A2E0 0F 9F EB A2        		pc=L4	// Indirect jump
                            	L6:
00000484                    	.debug
00000484 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00000497 10 00 00 00        		.dd LM4-_Delay
00000499 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2E2                    	.code
                            	LM4:
0000A2E2 41 94              		R2=1	// QImode move
0000A2E3 1A D5 12 70        		[28690]=R2	// QImode move
0000049B                    	.debug
0000049B 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
000004AE 13 00 00 00        		.dd LM5-_Delay
000004B0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2E5                    	.code
                            	LM5:
                            	L5:
0000A2E5 C5 94              		R2=[BP]	// QImode move
0000A2E6 0A 07 01 00        		R3=R2+1
0000A2E8 C5 D6              		[BP]=R3	// QImode move
0000A2E9 0F 9F DA A2        		pc=L3	// Indirect jump
                            	L4:
000004B2                    	.debug
000004B2 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000004C5 19 00 00 00        		.dd LM6-_Delay
000004C7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EB                    	.code
                            	LM6:
                            	LBE2:
000004C9                    	.debug
000004C9 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000004DC 19 00 00 00        		.dd LM7-_Delay
000004DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EB                    	.code
                            	LM7:
                            	L2:
                            	
0000A2EB 41 00              		sp+=1
0000A2EC 88 98              		pop bp from [sp]
0000A2ED 90 9A              		retf
                            		.endp	// end of Delay
                            	
000004E0                    	.debug
000004E0 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000004F2 06 00 00 00        		.dd LBB2-_Delay
000004F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EE                    	.code
000004F6                    	.debug
000004F6 2E 00 73 00        		.dw '.stabs "uiCount:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         43 00 6F 00
         75 00 6E 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A2EE                    	.CODE
00000514                    	.debug
00000514 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000526 19 00 00 00        		.dd LBE2-_Delay
00000528 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EE                    	.code
0000052A                    	.debug
0000052A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000533 1C 00 00 00        		.dd LME1-_Delay
00000535 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EE                    	.code
                            	LME1:
0000A2EE                    	.code
00000537                    	.debug
00000537 2E 00 73 00        		.dw '.stabs "PlaySnd_Auto:F19",36,0,0,',0,0,offset _PlaySnd_Auto,seg _PlaySnd_Auto,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         53 00 6E 00
         64 00 5F 00
         41 00 75 00
         74 00 6F 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 1C 00
         00 00 0D 00
         0A 00      
0000A2EE                    	.CODE
                            	.public _PlaySnd_Auto
                            	_PlaySnd_Auto:	.proc
0000055E                    	.debug
0000055E 2E 00 73 00        		.dw '.stabn 0x44,0,19,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         2C 00 00 00
         00 00      
00000571 00 00 00 00        		.dd LM8-_PlaySnd_Auto
00000573 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2EE                    	.code
                            	LM8:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000A2EE 88 DA              		push bp to [sp]
0000A2EF 41 20              		sp-=1
0000A2F0 08 0B 01 00        		bp=sp+1
                            	
0000A2F2 0D 03 04 00        		R1=BP+4
0000A2F4 C5 D2              		[BP]=R1	// QImode move
00000575                    	.debug
00000575 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
00000588 07 00 00 00        		.dd LM9-_PlaySnd_Auto
0000058A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2F5                    	.code
                            	LM9:
0000A2F5 41 92              		R1=1	// QImode move
0000A2F6 C8 D2              		[SP--]=R1	// QImode move
0000A2F7 40 F0 D8 98        		call _SACM_S480_Initial	// call with return value
0000A2F9 41 00              		SP = SP + 1	//SP
0000058C                    	.debug
0000058C 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
0000059F 0C 00 00 00        		.dd LM10-_PlaySnd_Auto
000005A1 0D 00 0A 00        		.dw 0x0d,0x0a
0000A2FA                    	.code
                            	LM10:
0000A2FA 43 92              		R1=3	// QImode move
0000A2FB C8 D2              		[SP--]=R1	// QImode move
0000A2FC C5 92              		R1=[BP]	// QImode move
0000A2FD C5 96              		R3=[BP]	// QImode move
0000A2FE 0B 05 01 00        		R2=R3+1
0000A300 02 97              		R3=R2	// QImode move
0000A301 C3 92              		R1=[R3]	// QImode move
0000A302 C8 D2              		[SP--]=R1	// QImode move
0000A303 C5 94              		R2=[BP]	// QImode move
0000A304 C2 92              		R1=[R2]	// QImode move
0000A305 C8 D2              		[SP--]=R1	// QImode move
0000A306 40 F0 0F 99        		call _SACM_S480_Play	// call without return value
0000A308 43 00              		SP = SP + 3	//SP
000005A3                    	.debug
000005A3 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
000005B6 1B 00 00 00        		.dd LM11-_PlaySnd_Auto
000005B8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A309                    	.code
                            	LM11:
                            	L9:
0000A309 40 F0 F1 99        		call _SACM_S480_Status	// call with return value
0000A30B 09 B5 01 00        		R2=R1&1
0000A30D 40 44              		CMP R2,0	// QImode test
0000A30E 04 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
0000A311 0F 9F 1A A3        		pc=L10	// Indirect jump
                            	L11:
000005BA                    	.debug
000005BA 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
000005CD 25 00 00 00        		.dd LM12-_PlaySnd_Auto
000005CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A313                    	.code
                            	LM12:
0000A313 40 F0 48 9A        		call _SACM_S480_ServiceLoop	// call without return value
000005D1                    	.debug
000005D1 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
000005E4 27 00 00 00        		.dd LM13-_PlaySnd_Auto
000005E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A315                    	.code
                            	LM13:
0000A315 41 92              		R1=1	// QImode move
0000A316 19 D3 12 70        		[28690]=R1	// QImode move
000005E8                    	.debug
000005E8 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
000005FB 2A 00 00 00        		.dd LM14-_PlaySnd_Auto
000005FD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A318                    	.code
                            	LM14:
0000A318 0F 9F 09 A3        		pc=L9	// Indirect jump
                            	L10:
000005FF                    	.debug
000005FF 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
00000612 2C 00 00 00        		.dd LM15-_PlaySnd_Auto
00000614 0D 00 0A 00        		.dw 0x0d,0x0a
0000A31A                    	.code
                            	LM15:
0000A31A 40 F0 A7 99        		call _SACM_S480_Stop	// call without return value
00000616                    	.debug
00000616 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000629 2E 00 00 00        		.dd LM16-_PlaySnd_Auto
0000062B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A31C                    	.code
                            	LM16:
0000062D                    	.debug
0000062D 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000640 2E 00 00 00        		.dd LM17-_PlaySnd_Auto
00000642 0D 00 0A 00        		.dw 0x0d,0x0a
0000A31C                    	.code
                            	LM17:
                            	L8:
                            	
0000A31C 41 00              		sp+=1
0000A31D 88 98              		pop bp from [sp]
0000A31E 90 9A              		retf
                            		.endp	// end of PlaySnd_Auto
                            	
00000644                    	.debug
00000644 2E 00 73 00        		.dw '.stabs "uiSndIndex:p4",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         53 00 6E 00
         64 00 49 00
         6E 00 64 00
         65 00 78 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A31F                    	.CODE
00000666                    	.debug
00000666 2E 00 73 00        		.dw '.stabs "uiDAC_Channel:p4",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         44 00 41 00
         43 00 5F 00
         43 00 68 00
         61 00 6E 00
         6E 00 65 00
         6C 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         35 00 0D 00
         0A 00      
0000A31F                    	.CODE
0000068B                    	.debug
0000068B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000694 31 00 00 00        		.dd LME2-_PlaySnd_Auto
00000696 0D 00 0A 00        		.dw 0x0d,0x0a
0000A31F                    	.code
                            	LME2:
0000A31F                    	.code
00000698                    	.debug
00000698 2E 00 73 00        		.dw '.stabs "PlayRecord:F19",36,0,0,',0,0,offset _PlayRecord,seg _PlayRecord,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         63 00 6F 00
         72 00 64 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 4D 00
         00 00 0D 00
         0A 00      
0000A31F                    	.CODE
                            	.public _PlayRecord
                            	_PlayRecord:	.proc
000006BD                    	.debug
000006BD 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
000006D0 00 00 00 00        		.dd LM18-_PlayRecord
000006D2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A31F                    	.code
                            	LM18:
                            		// total=10, vars=10
                            		// frame_pointer_needed: 1
0000A31F 88 DA              		push bp to [sp]
0000A320 4A 20              		sp-=10
0000A321 08 0B 01 00        		bp=sp+1
                            	
0000A323 0D 03 0D 00        		R1=BP+13
0000A325 05 D2              		[bp+5]=R1	// QImode move
000006D4                    	.debug
000006D4 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
000006E7 07 00 00 00        		.dd LM19-_PlayRecord
000006E9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A326                    	.code
                            	LM19:
                            	LBB3:
000006EB                    	.debug
000006EB 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
000006FE 07 00 00 00        		.dd LM20-_PlayRecord
00000700 0D 00 0A 00        		.dw 0x0d,0x0a
0000A326                    	.code
                            	LM20:
0000A326 40 92              		R1=0	// QImode move
0000A327 C8 D2              		[SP--]=R1	// QImode move
0000A328 40 F0 59 80        		call _SACM_DVR_Initial	// call with return value
0000A32A 41 00              		SP = SP + 1	//SP
00000702                    	.debug
00000702 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
00000715 0C 00 00 00        		.dd LM21-_PlayRecord
00000717 0D 00 0A 00        		.dw 0x0d,0x0a
0000A32B                    	.code
                            	LM21:
0000A32B 40 F0 2A 81        		call _SACM_DVR_InitQueue	// call without return value
00000719                    	.debug
00000719 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
0000072C 0E 00 00 00        		.dd LM22-_PlayRecord
0000072E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A32D                    	.code
                            	LM22:
0000A32D 43 92              		R1=3	// QImode move
0000A32E C8 D2              		[SP--]=R1	// QImode move
0000A32F 40 F0 DB 80        		call _SACM_DVR_InitDecoder	// call without return value
0000A331 41 00              		SP = SP + 1	//SP
00000730                    	.debug
00000730 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000743 13 00 00 00        		.dd LM23-_PlayRecord
00000745 0D 00 0A 00        		.dw 0x0d,0x0a
0000A332                    	.code
                            	LM23:
                            		//split R1, 47105
0000A332 09 93 01 B8        		R1=47105	// QImode move
0000A334 40 94              		R2=0	// QImode move
                            		//split [BP], R1
0000A335 C5 D2              		[BP]=R1	// QImode move
0000A336 01 D4              		[bp+1]=R2	// QImode move
00000747                    	.debug
00000747 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
0000075A 18 00 00 00        		.dd LM24-_PlayRecord
0000075C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A337                    	.code
                            	LM24:
0000A337 05 93              		R1=BP	// QImode move
0000A338 0D 05 02 00        		R2=BP+2
0000A33A 06 D4              		[bp+6]=R2	// QImode move
0000A33B 09 63 00 48        		R1=(-18432)	// QImode move
0000A33D C8 D2              		[SP--]=R1	// QImode move
0000A33E 40 F0 9E AB        		call _Flash_ReadWord	// call with return value
0000A340 41 00              		SP = SP + 1	//SP
0000A341 01 97              		R3=R1
0000A342 40 98              		R4=0
0000A343 06 92              		R1=[bp+6]	// QImode move
                            		//split [R1], R3
0000A344 D1 D6              		[R1++]=R3	// QImode move
0000A345 C9 D8              		[R1--]=R4	// QImode move
0000075E                    	.debug
0000075E 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00000771 27 00 00 00        		.dd LM25-_PlayRecord
00000773 0D 00 0A 00        		.dw 0x0d,0x0a
0000A346                    	.code
                            	LM25:
                            	L14:
0000A346 0F 9F 4A A3        		pc=L16	// Indirect jump
0000A348 0F 9F A6 A3        		pc=L15	// Indirect jump
                            	L16:
00000775                    	.debug
00000775 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000788 2B 00 00 00        		.dd LM26-_PlayRecord
0000078A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A34A                    	.code
                            	LM26:
0000A34A 41 92              		R1=1	// QImode move
0000A34B 19 D3 12 70        		[28690]=R1	// QImode move
0000078C                    	.debug
0000078C 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
0000079F 2E 00 00 00        		.dd LM27-_PlayRecord
000007A1 0D 00 0A 00        		.dw 0x0d,0x0a
0000A34D                    	.code
                            	LM27:
                            	L17:
0000A34D 40 F0 43 81        		call _SACM_DVR_TestQueue	// call with return value
0000A34F 41 42              		CMP R1,1	// QImode compare
0000A350 04 4E 01 EE        		NSJNZ L19	//QImode NE
         00 EE      
0000A353 0F 9F 8A A3        		pc=L18	// Indirect jump
                            	L19:
000007A3                    	.debug
000007A3 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
000007B6 36 00 00 00        		.dd LM28-_PlayRecord
000007B8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A355                    	.code
                            	LM28:
0000A355 C5 92              		R1=[BP]	// QImode move
0000A356 C8 D2              		[SP--]=R1	// QImode move
0000A357 40 F0 9E AB        		call _Flash_ReadWord	// call with return value
0000A359 41 00              		SP = SP + 1	//SP
0000A35A 05 95              		R2=BP	// QImode move
0000A35B 0D 07 04 00        		R3=BP+4
0000A35D 03 95              		R2=R3	// QImode move
0000A35E C2 D2              		[R2]=R1	// QImode move
000007BA                    	.debug
000007BA 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
000007CD 40 00 00 00        		.dd LM29-_PlayRecord
000007CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A35F                    	.code
                            	LM29:
0000A35F 05 93              		R1=BP	// QImode move
0000A360 0D 05 04 00        		R2=BP+4
0000A362 02 97              		R3=R2	// QImode move
0000A363 C3 92              		R1=[R3]	// QImode move
0000A364 C8 D2              		[SP--]=R1	// QImode move
0000A365 40 F0 39 81        		call _SACM_DVR_FillQueue	// call without return value
0000A367 41 00              		SP = SP + 1	//SP
000007D1                    	.debug
000007D1 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
000007E4 49 00 00 00        		.dd LM30-_PlayRecord
000007E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A368                    	.code
                            	LM30:
                            		//split R1, [BP]
0000A368 C5 92              		R1=[BP]	// QImode move
0000A369 01 94              		R2=[bp+1]	// QImode move
0000A36A 09 07 01 00        		R3=R1+1	// HImode RD=RS+#IMM16
0000A36C 0A 19 00 00        		R4=R2+0, Carry
                            		//split [BP], R3
0000A36E C5 D6              		[BP]=R3	// QImode move
0000A36F 01 D8              		[bp+1]=R4	// QImode move
000007E8                    	.debug
000007E8 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
000007FB 51 00 00 00        		.dd LM31-_PlayRecord
000007FD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A370                    	.code
                            	LM31:
0000A370 05 93              		R1=BP	// QImode move
0000A371 0D 09 02 00        		R4=BP+2
0000A373 09 D8              		[bp+9]=R4	// QImode move
                            		//split R1, [BP]
0000A374 C5 92              		R1=[BP]	// QImode move
0000A375 01 94              		R2=[bp+1]	// QImode move
                            		//split [bp+7], R1
0000A376 07 D2              		[bp+7]=R1	// QImode move
0000A377 08 D4              		[bp+8]=R2	// QImode move
0000A378 09 96              		R3=[bp+9]	// QImode move
                            		//split R1, [R3]
0000A379 D3 92              		R1=[R3++]	// QImode move
0000A37A CB 94              		R2=[R3--]	// QImode move
                            		//split R3, [bp+7]
0000A37B 07 96              		R3=[bp+7]	// QImode move
0000A37C 08 98              		R4=[bp+8]	// QImode move
0000A37D 02 49              		CMP R4,R2	// HImode 1st compare
0000A37E 07 9E              		JA  L26	// HImode LEU
0000A37F 08 4E 01 EE        		NSJNZ L20
         00 EE      
0000A382 01 47              		CMP R3,R1
0000A383 04 8E 01 EE        		NSJNA  L20
         00 EE      
                            	L26:
0000A386 0F 9F 8A A3        		pc=L18	// Indirect jump
                            	L20:
000007FF                    	.debug
000007FF 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000812 69 00 00 00        		.dd LM32-_PlayRecord
00000814 0D 00 0A 00        		.dw 0x0d,0x0a
0000A388                    	.code
                            	LM32:
0000A388 0F 9F 4D A3        		pc=L17	// Indirect jump
                            	L18:
00000816                    	.debug
00000816 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
00000829 6B 00 00 00        		.dd LM33-_PlayRecord
0000082B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A38A                    	.code
                            	LM33:
0000A38A 40 F0 27 81        		call _SACM_DVR_Status	// call with return value
0000A38C 09 B5 01 00        		R2=R1&1
0000A38E 40 44              		CMP R2,0	// QImode test
0000A38F 0C 5E 01 EE        		NSJZ L22	//QImode EQ
         00 EE      
0000A392 12 95 00 70        		R2=[28672]	// QImode move
0000A394 0A B3 02 00        		R1=R2&2
0000A396 40 42              		CMP R1,0	// QImode test
0000A397 04 4E 01 EE        		NSJNZ L22	//QImode NE
         00 EE      
0000A39A 0F 9F A2 A3        		pc=L21	// Indirect jump
                            	L22:
0000082D                    	.debug
0000082D 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00000840 7D 00 00 00        		.dd LM34-_PlayRecord
00000842 0D 00 0A 00        		.dw 0x0d,0x0a
0000A39C                    	.code
                            	LM34:
0000A39C 40 F0 16 81        		call _SACM_DVR_Stop	// call without return value
00000844                    	.debug
00000844 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000857 7F 00 00 00        		.dd LM35-_PlayRecord
00000859 0D 00 0A 00        		.dw 0x0d,0x0a
0000A39E                    	.code
                            	LM35:
0000A39E 0F 9F A6 A3        		pc=L15	// Indirect jump
0000085B                    	.debug
0000085B 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
0000086E 81 00 00 00        		.dd LM36-_PlayRecord
00000870 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A0                    	.code
                            	LM36:
0000A3A0 0F 9F A4 A3        		pc=L23	// Indirect jump
                            	L21:
00000872                    	.debug
00000872 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000885 83 00 00 00        		.dd LM37-_PlayRecord
00000887 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A2                    	.code
                            	LM37:
0000A3A2 40 F0 B4 80        		call _SACM_DVR_Decoder	// call without return value
                            	L23:
00000889                    	.debug
00000889 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000089C 85 00 00 00        		.dd LM38-_PlayRecord
0000089E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A4                    	.code
                            	LM38:
0000A3A4 0F 9F 46 A3        		pc=L14	// Indirect jump
                            	L15:
000008A0                    	.debug
000008A0 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000008B3 87 00 00 00        		.dd LM39-_PlayRecord
000008B5 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A6                    	.code
                            	LM39:
                            	LBE3:
000008B7                    	.debug
000008B7 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000008CA 87 00 00 00        		.dd LM40-_PlayRecord
000008CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A6                    	.code
                            	LM40:
                            	L13:
                            	
0000A3A6 4A 00              		sp+=10
0000A3A7 88 98              		pop bp from [sp]
0000A3A8 90 9A              		retf
                            		.endp	// end of PlayRecord
                            	
000008CE                    	.debug
000008CE 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000008E0 07 00 00 00        		.dd LBB3-_PlayRecord
000008E2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A9                    	.code
000008E4                    	.debug
000008E4 2E 00 73 00        		.dw '.stabs "Addr:5",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 35 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A3A9                    	.CODE
000008FF                    	.debug
000008FF 2E 00 73 00        		.dw '.stabs "EndAddr:5",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 6E 00
         64 00 41 00
         64 00 64 00
         72 00 3A 00
         35 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000A3A9                    	.CODE
0000091D                    	.debug
0000091D 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A3A9                    	.CODE
00000937                    	.debug
00000937 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000949 87 00 00 00        		.dd LBE3-_PlayRecord
0000094B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A9                    	.code
0000094D                    	.debug
0000094D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000956 8A 00 00 00        		.dd LME3-_PlayRecord
00000958 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A9                    	.code
                            	LME3:
0000A3A9                    	.code
0000095A                    	.debug
0000095A 2E 00 73 00        		.dw '.stabs "Record:F19",36,0,0,',0,0,offset _Record,seg _Record,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         63 00 6F 00
         72 00 64 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 D7 00
         00 00 0D 00
         0A 00      
0000A3A9                    	.CODE
                            	.public _Record
                            	_Record:	.proc
0000097B                    	.debug
0000097B 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000098E 00 00 00 00        		.dd LM41-_Record
00000990 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3A9                    	.code
                            	LM41:
                            		// total=4, vars=4
                            		// frame_pointer_needed: 1
0000A3A9 88 DA              		push bp to [sp]
0000A3AA 44 20              		sp-=4
0000A3AB 08 0B 01 00        		bp=sp+1
                            	
0000A3AD 0D 03 07 00        		R1=BP+7
0000A3AF 02 D2              		[bp+2]=R1	// QImode move
00000992                    	.debug
00000992 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000009A5 07 00 00 00        		.dd LM42-_Record
000009A7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3B0                    	.code
                            	LM42:
                            	LBB4:
000009A9                    	.debug
000009A9 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
000009BC 07 00 00 00        		.dd LM43-_Record
000009BE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3B0                    	.code
                            	LM43:
0000A3B0 09 63 00 48        		R1=(-18432)	// QImode move
0000A3B2 C5 D2              		[BP]=R1	// QImode move
                            	L30:
0000A3B3 C5 92              		R1=[BP]	// QImode move
0000A3B4 09 43 FF FB        		CMP R1,(-1025)	// QImode compare
0000A3B6 04 8E 01 EE        		NSJNA L33	//QImode LEU
         00 EE      
0000A3B9 0F 9F C9 A3        		pc=L31	// Indirect jump
                            	L33:
000009C0                    	.debug
000009C0 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000009D3 12 00 00 00        		.dd LM44-_Record
000009D5 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3BB                    	.code
                            	LM44:
0000A3BB C5 92              		R1=[BP]	// QImode move
0000A3BC C8 D2              		[SP--]=R1	// QImode move
0000A3BD 40 F0 8A AB        		call _Flash_Erase	// call without return value
0000A3BF 41 00              		SP = SP + 1	//SP
000009D7                    	.debug
000009D7 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000009EA 17 00 00 00        		.dd LM45-_Record
000009EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3C0                    	.code
                            	LM45:
0000A3C0 41 92              		R1=1	// QImode move
0000A3C1 19 D3 12 70        		[28690]=R1	// QImode move
000009EE                    	.debug
000009EE 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000A01 1A 00 00 00        		.dd LM46-_Record
00000A03 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3C3                    	.code
                            	LM46:
                            	L32:
0000A3C3 C5 92              		R1=[BP]	// QImode move
0000A3C4 09 05 00 01        		R2=R1+256
0000A3C6 C5 D4              		[BP]=R2	// QImode move
0000A3C7 0F 9F B3 A3        		pc=L30	// Indirect jump
                            	L31:
00000A05                    	.debug
00000A05 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000A18 20 00 00 00        		.dd LM47-_Record
00000A1A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3C9                    	.code
                            	LM47:
0000A3C9 43 92              		R1=3	// QImode move
0000A3CA C8 D2              		[SP--]=R1	// QImode move
0000A3CB 43 92              		R1=3	// QImode move
0000A3CC C8 D2              		[SP--]=R1	// QImode move
0000A3CD 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A3CF 42 00              		SP = SP + 2	//SP
00000A1C                    	.debug
00000A1C 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000A2F 27 00 00 00        		.dd LM48-_Record
00000A31 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3D0                    	.code
                            	LM48:
0000A3D0 40 92              		R1=0	// QImode move
0000A3D1 C8 D2              		[SP--]=R1	// QImode move
0000A3D2 40 F0 59 80        		call _SACM_DVR_Initial	// call with return value
0000A3D4 41 00              		SP = SP + 1	//SP
00000A33                    	.debug
00000A33 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000A46 2C 00 00 00        		.dd LM49-_Record
00000A48 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3D5                    	.code
                            	LM49:
0000A3D5 40 F0 2A 81        		call _SACM_DVR_InitQueue	// call without return value
00000A4A                    	.debug
00000A4A 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000A5D 2E 00 00 00        		.dd LM50-_Record
00000A5F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3D7                    	.code
                            	LM50:
0000A3D7 40 92              		R1=0	// QImode move
0000A3D8 C8 D2              		[SP--]=R1	// QImode move
0000A3D9 40 92              		R1=0	// QImode move
0000A3DA C8 D2              		[SP--]=R1	// QImode move
0000A3DB 40 F0 C0 80        		call _SACM_DVR_InitEncoder	// call without return value
0000A3DD 42 00              		SP = SP + 2	//SP
00000A61                    	.debug
00000A61 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000A74 35 00 00 00        		.dd LM51-_Record
00000A76 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3DE                    	.code
                            	LM51:
0000A3DE 09 63 FF 47        		R1=(-18431)	// QImode move
0000A3E0 C5 D2              		[BP]=R1	// QImode move
00000A78                    	.debug
00000A78 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000A8B 38 00 00 00        		.dd LM52-_Record
00000A8D 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3E1                    	.code
                            	LM52:
                            	L34:
0000A3E1 0F 9F E5 A3        		pc=L36	// Indirect jump
0000A3E3 0F 9F 27 A4        		pc=L35	// Indirect jump
                            	L36:
00000A8F                    	.debug
00000A8F 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
00000AA2 3C 00 00 00        		.dd LM53-_Record
00000AA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3E5                    	.code
                            	LM53:
0000A3E5 41 92              		R1=1	// QImode move
0000A3E6 19 D3 12 70        		[28690]=R1	// QImode move
00000AA6                    	.debug
00000AA6 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000AB9 3F 00 00 00        		.dd LM54-_Record
00000ABB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3E8                    	.code
                            	LM54:
0000A3E8 40 F0 B9 80        		call _SACM_DVR_Encoder	// call without return value
00000ABD                    	.debug
00000ABD 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000AD0 41 00 00 00        		.dd LM55-_Record
00000AD2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3EA                    	.code
                            	LM55:
0000A3EA 40 F0 43 81        		call _SACM_DVR_TestQueue	// call with return value
0000A3EC 42 42              		CMP R1,2	// QImode compare
0000A3ED 37 5E 01 EE        		NSJZ L37	//QImode EQ
         00 EE      
00000AD4                    	.debug
00000AD4 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
00000AE7 47 00 00 00        		.dd LM56-_Record
00000AE9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3F0                    	.code
                            	LM56:
0000A3F0 05 93              		R1=BP	// QImode move
0000A3F1 0D 05 01 00        		R2=BP+1
0000A3F3 03 D4              		[bp+3]=R2	// QImode move
0000A3F4 40 F0 2F 81        		call _SACM_DVR_FetchQueue	// call with return value
0000A3F6 03 96              		R3=[bp+3]	// QImode move
0000A3F7 C3 D2              		[R3]=R1	// QImode move
00000AEB                    	.debug
00000AEB 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000AFE 4F 00 00 00        		.dd LM57-_Record
00000B00 0D 00 0A 00        		.dw 0x0d,0x0a
0000A3F8                    	.code
                            	LM57:
0000A3F8 05 93              		R1=BP	// QImode move
0000A3F9 0D 05 01 00        		R2=BP+1
0000A3FB 02 97              		R3=R2	// QImode move
0000A3FC C3 92              		R1=[R3]	// QImode move
0000A3FD C8 D2              		[SP--]=R1	// QImode move
0000A3FE C5 92              		R1=[BP]	// QImode move
0000A3FF C8 D2              		[SP--]=R1	// QImode move
0000A400 40 F0 56 AB        		call _Flash_WriteWord	// call without return value
0000A402 42 00              		SP = SP + 2	//SP
00000B02                    	.debug
00000B02 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000B15 5A 00 00 00        		.dd LM58-_Record
00000B17 0D 00 0A 00        		.dw 0x0d,0x0a
0000A403                    	.code
                            	LM58:
0000A403 C5 92              		R1=[BP]	// QImode move
0000A404 09 05 01 00        		R2=R1+1
0000A406 C5 D4              		[BP]=R2	// QImode move
00000B19                    	.debug
00000B19 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000B2C 5E 00 00 00        		.dd LM59-_Record
00000B2E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A407                    	.code
                            	LM59:
0000A407 C5 92              		R1=[BP]	// QImode move
0000A408 09 43 FF FB        		CMP R1,(-1025)	// QImode compare
0000A40A 0C 9E 01 EE        		NSJA L39	//QImode GTU
         00 EE      
0000A40D 12 95 00 70        		R2=[28672]	// QImode move
0000A40F 0A B3 02 00        		R1=R2&2
0000A411 40 42              		CMP R1,0	// QImode test
0000A412 04 4E 01 EE        		NSJNZ L39	//QImode NE
         00 EE      
0000A415 0F 9F 25 A4        		pc=L37	// Indirect jump
                            	L39:
00000B30                    	.debug
00000B30 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000B43 6E 00 00 00        		.dd LM60-_Record
00000B45 0D 00 0A 00        		.dw 0x0d,0x0a
0000A417                    	.code
                            	LM60:
0000A417 C5 94              		R2=[BP]	// QImode move
0000A418 0A 03 FF FF        		R1=R2+(-1)
0000A41A C8 D2              		[SP--]=R1	// QImode move
0000A41B 09 63 00 48        		R1=(-18432)	// QImode move
0000A41D C8 D2              		[SP--]=R1	// QImode move
0000A41E 40 F0 56 AB        		call _Flash_WriteWord	// call without return value
0000A420 42 00              		SP = SP + 2	//SP
00000B47                    	.debug
00000B47 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000B5A 78 00 00 00        		.dd LM61-_Record
00000B5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A421                    	.code
                            	LM61:
0000A421 40 F0 16 81        		call _SACM_DVR_Stop	// call without return value
00000B5E                    	.debug
00000B5E 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000B71 7A 00 00 00        		.dd LM62-_Record
00000B73 0D 00 0A 00        		.dw 0x0d,0x0a
0000A423                    	.code
                            	LM62:
0000A423 0F 9F 27 A4        		pc=L35	// Indirect jump
                            	L38:
                            	L37:
00000B75                    	.debug
00000B75 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000B88 7C 00 00 00        		.dd LM63-_Record
00000B8A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A425                    	.code
                            	LM63:
0000A425 0F 9F E1 A3        		pc=L34	// Indirect jump
                            	L35:
00000B8C                    	.debug
00000B8C 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000B9F 7E 00 00 00        		.dd LM64-_Record
00000BA1 0D 00 0A 00        		.dw 0x0d,0x0a
0000A427                    	.code
                            	LM64:
                            	LBE4:
00000BA3                    	.debug
00000BA3 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000BB6 7E 00 00 00        		.dd LM65-_Record
00000BB8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A427                    	.code
                            	LM65:
                            	L29:
                            	
0000A427 44 00              		sp+=4
0000A428 88 98              		pop bp from [sp]
0000A429 90 9A              		retf
                            		.endp	// end of Record
                            	
00000BBA                    	.debug
00000BBA 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000BCC 07 00 00 00        		.dd LBB4-_Record
00000BCE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A42A                    	.code
00000BD0                    	.debug
00000BD0 2E 00 73 00        		.dw '.stabs "Addr:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A42A                    	.CODE
00000BEB                    	.debug
00000BEB 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000A42A                    	.CODE
00000C05                    	.debug
00000C05 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C17 7E 00 00 00        		.dd LBE4-_Record
00000C19 0D 00 0A 00        		.dw 0x0d,0x0a
0000A42A                    	.code
00000C1B                    	.debug
00000C1B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C24 81 00 00 00        		.dd LME4-_Record
00000C26 0D 00 0A 00        		.dw 0x0d,0x0a
0000A42A                    	.code
                            	LME4:
0000A42A                    	.code
00000C28                    	.debug
00000C28 2E 00 73 00        		.dw '.stabs "Ebit:F1",36,0,0,',0,0,offset _Ebit,seg _Ebit,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 62 00
         69 00 74 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         58 01 00 00
         0D 00 0A 00
0000A42A                    	.CODE
                            	.public _Ebit
                            	_Ebit:	.proc
00000C46                    	.debug
00000C46 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000C5A 00 00 00 00        		.dd LM66-_Ebit
00000C5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A42A                    	.code
                            	LM66:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000A42A 88 DA              		push bp to [sp]
0000A42B 41 20              		sp-=1
0000A42C 08 0B 01 00        		bp=sp+1
                            	
0000A42E 0D 05 04 00        		R2=BP+4
00000C5E                    	.debug
00000C5E 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00000C72 06 00 00 00        		.dd LM67-_Ebit
00000C74 0D 00 0A 00        		.dw 0x0d,0x0a
0000A430                    	.code
                            	LM67:
                            	LBB5:
0000A430 40 92              		R1=0	// QImode move
0000A431 C5 D2              		[BP]=R1	// QImode move
00000C76                    	.debug
00000C76 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000C8A 08 00 00 00        		.dd LM68-_Ebit
00000C8C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A432                    	.code
                            	LM68:
0000A432 02 97              		R3=R2	// QImode move
0000A433 C3 96              		R3=[R3]	// QImode move
0000A434 0B B3 01 00        		R1=R3&1
0000A436 40 42              		CMP R1,0	// QImode test
0000A437 06 5E 01 EE        		NSJZ L45	//QImode EQ
         00 EE      
0000A43A C5 92              		R1=[BP]	// QImode move
0000A43B 09 07 01 00        		R3=R1+1
0000A43D C5 D6              		[BP]=R3	// QImode move
                            	L45:
00000C8E                    	.debug
00000C8E 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000CA2 14 00 00 00        		.dd LM69-_Ebit
00000CA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A43E                    	.code
                            	LM69:
0000A43E 02 99              		R4=R2	// QImode move
0000A43F C4 98              		R4=[R4]	// QImode move
0000A440 0C B3 02 00        		R1=R4&2
0000A442 40 42              		CMP R1,0	// QImode test
0000A443 06 5E 01 EE        		NSJZ L46	//QImode EQ
         00 EE      
0000A446 C5 92              		R1=[BP]	// QImode move
0000A447 09 07 01 00        		R3=R1+1
0000A449 C5 D6              		[BP]=R3	// QImode move
                            	L46:
00000CA6                    	.debug
00000CA6 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000CBA 20 00 00 00        		.dd LM70-_Ebit
00000CBC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A44A                    	.code
                            	LM70:
0000A44A 02 97              		R3=R2	// QImode move
0000A44B C3 96              		R3=[R3]	// QImode move
0000A44C 0B B3 04 00        		R1=R3&4
0000A44E 40 42              		CMP R1,0	// QImode test
0000A44F 06 5E 01 EE        		NSJZ L47	//QImode EQ
         00 EE      
0000A452 C5 92              		R1=[BP]	// QImode move
0000A453 09 07 01 00        		R3=R1+1
0000A455 C5 D6              		[BP]=R3	// QImode move
                            	L47:
00000CBE                    	.debug
00000CBE 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000CD2 2C 00 00 00        		.dd LM71-_Ebit
00000CD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A456                    	.code
                            	LM71:
0000A456 02 99              		R4=R2	// QImode move
0000A457 C4 98              		R4=[R4]	// QImode move
0000A458 0C B3 08 00        		R1=R4&8
0000A45A 40 42              		CMP R1,0	// QImode test
0000A45B 06 5E 01 EE        		NSJZ L48	//QImode EQ
         00 EE      
0000A45E C5 92              		R1=[BP]	// QImode move
0000A45F 09 07 01 00        		R3=R1+1
0000A461 C5 D6              		[BP]=R3	// QImode move
                            	L48:
00000CD6                    	.debug
00000CD6 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000CEA 38 00 00 00        		.dd LM72-_Ebit
00000CEC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A462                    	.code
                            	LM72:
0000A462 02 97              		R3=R2	// QImode move
0000A463 C3 96              		R3=[R3]	// QImode move
0000A464 0B B3 10 00        		R1=R3&16
0000A466 40 42              		CMP R1,0	// QImode test
0000A467 06 5E 01 EE        		NSJZ L49	//QImode EQ
         00 EE      
0000A46A C5 92              		R1=[BP]	// QImode move
0000A46B 09 07 01 00        		R3=R1+1
0000A46D C5 D6              		[BP]=R3	// QImode move
                            	L49:
00000CEE                    	.debug
00000CEE 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000D02 44 00 00 00        		.dd LM73-_Ebit
00000D04 0D 00 0A 00        		.dw 0x0d,0x0a
0000A46E                    	.code
                            	LM73:
0000A46E 02 99              		R4=R2	// QImode move
0000A46F C4 98              		R4=[R4]	// QImode move
0000A470 0C B3 20 00        		R1=R4&32
0000A472 40 42              		CMP R1,0	// QImode test
0000A473 06 5E 01 EE        		NSJZ L50	//QImode EQ
         00 EE      
0000A476 C5 92              		R1=[BP]	// QImode move
0000A477 09 07 01 00        		R3=R1+1
0000A479 C5 D6              		[BP]=R3	// QImode move
                            	L50:
00000D06                    	.debug
00000D06 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000D1A 50 00 00 00        		.dd LM74-_Ebit
00000D1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A47A                    	.code
                            	LM74:
0000A47A 02 97              		R3=R2	// QImode move
0000A47B C3 96              		R3=[R3]	// QImode move
0000A47C 0B B3 40 00        		R1=R3&64
0000A47E 40 42              		CMP R1,0	// QImode test
0000A47F 06 5E 01 EE        		NSJZ L51	//QImode EQ
         00 EE      
0000A482 C5 92              		R1=[BP]	// QImode move
0000A483 09 07 01 00        		R3=R1+1
0000A485 C5 D6              		[BP]=R3	// QImode move
                            	L51:
00000D1E                    	.debug
00000D1E 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000D32 5C 00 00 00        		.dd LM75-_Ebit
00000D34 0D 00 0A 00        		.dw 0x0d,0x0a
0000A486                    	.code
                            	LM75:
0000A486 02 99              		R4=R2	// QImode move
0000A487 C4 98              		R4=[R4]	// QImode move
0000A488 0C B3 80 00        		R1=R4&128
0000A48A 40 42              		CMP R1,0	// QImode test
0000A48B 06 5E 01 EE        		NSJZ L52	//QImode EQ
         00 EE      
0000A48E C5 92              		R1=[BP]	// QImode move
0000A48F 09 07 01 00        		R3=R1+1
0000A491 C5 D6              		[BP]=R3	// QImode move
                            	L52:
00000D36                    	.debug
00000D36 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000D4A 68 00 00 00        		.dd LM76-_Ebit
00000D4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A492                    	.code
                            	LM76:
0000A492 C5 92              		R1=[BP]	// QImode move
0000A493 59 97              		R3=R1 lsl 4
0000A494 5B 97              		R3=R3 lsl 4
0000A495 02 93              		R1=R2	// QImode move
0000A496 C1 A6              		R3|=[R1]	// iorqi3_r0R
0000A497 0B B7 FF 01        		R3=R3&511
0000A499 03 93              		R1=R3	// QImode move
0000A49A 0F 9F 9C A4        		pc=L44	// Indirect jump
00000D4E                    	.debug
00000D4E 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000D62 72 00 00 00        		.dd LM77-_Ebit
00000D64 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49C                    	.code
                            	LM77:
                            	LBE5:
00000D66                    	.debug
00000D66 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000D7A 72 00 00 00        		.dd LM78-_Ebit
00000D7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49C                    	.code
                            	LM78:
                            	L44:
                            	
0000A49C 41 00              		sp+=1
0000A49D 88 98              		pop bp from [sp]
0000A49E 90 9A              		retf
                            		.endp	// end of Ebit
                            	
00000D7E                    	.debug
00000D7E 2E 00 73 00        		.dw '.stabs "n:p4",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000A49F                    	.CODE
00000D97                    	.debug
00000D97 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DA9 06 00 00 00        		.dd LBB5-_Ebit
00000DAB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49F                    	.code
00000DAD                    	.debug
00000DAD 2E 00 73 00        		.dw '.stabs "count:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         75 00 6E 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A49F                    	.CODE
00000DC9                    	.debug
00000DC9 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DDB 72 00 00 00        		.dd LBE5-_Ebit
00000DDD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49F                    	.code
00000DDF                    	.debug
00000DDF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000DE8 75 00 00 00        		.dd LME5-_Ebit
00000DEA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49F                    	.code
                            	LME5:
0000A49F                    	.code
00000DEC                    	.debug
00000DEC 2E 00 73 00        		.dw '.stabs "Send:F1",36,0,0,',0,0,offset _Send,seg _Send,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 65 00
         6E 00 64 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         CD 01 00 00
         0D 00 0A 00
0000A49F                    	.CODE
                            	.public _Send
                            	_Send:	.proc
00000E0A                    	.debug
00000E0A 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000E1E 00 00 00 00        		.dd LM79-_Send
00000E20 0D 00 0A 00        		.dw 0x0d,0x0a
0000A49F                    	.code
                            	LM79:
                            		// total=12, vars=12
                            		// frame_pointer_needed: 1
0000A49F 88 DA              		push bp to [sp]
0000A4A0 4C 20              		sp-=12
0000A4A1 08 0B 01 00        		bp=sp+1
                            	
0000A4A3 0D 03 0F 00        		R1=BP+15
0000A4A5 09 D2              		[bp+9]=R1	// QImode move
00000E22                    	.debug
00000E22 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000E36 07 00 00 00        		.dd LM80-_Send
00000E38 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4A6                    	.code
                            	LM80:
                            	LBB6:
00000E3A                    	.debug
00000E3A 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000E4E 07 00 00 00        		.dd LM81-_Send
00000E50 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4A6                    	.code
                            	LM81:
0000A4A6 09 63 00 48        		R1=(-18432)	// QImode move
0000A4A8 C8 D2              		[SP--]=R1	// QImode move
0000A4A9 40 F0 9E AB        		call _Flash_ReadWord	// call with return value
0000A4AB 41 00              		SP = SP + 1	//SP
0000A4AC 05 95              		R2=BP	// QImode move
0000A4AD 0D 07 01 00        		R3=BP+1
0000A4AF 03 95              		R2=R3	// QImode move
0000A4B0 C2 D2              		[R2]=R1	// QImode move
00000E52                    	.debug
00000E52 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000E66 12 00 00 00        		.dd LM82-_Send
00000E68 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4B1                    	.code
                            	LM82:
0000A4B1 05 93              		R1=BP	// QImode move
0000A4B2 0D 05 01 00        		R2=BP+1
0000A4B4 02 97              		R3=R2	// QImode move
0000A4B5 C3 92              		R1=[R3]	// QImode move
0000A4B6 09 43 FF FF        		CMP R1,(-1)	// QImode compare
0000A4B8 05 4E 01 EE        		NSJNZ L62	//QImode NE
         00 EE      
0000A4BB 44 92              		R1=4	// QImode move
0000A4BC 0F 9F 62 A6        		pc=L61	// Indirect jump
                            	L62:
00000E6A                    	.debug
00000E6A 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000E7E 1F 00 00 00        		.dd LM83-_Send
00000E80 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4BE                    	.code
                            	LM83:
0000A4BE 41 62              		R1=(-1)	// QImode move
0000A4BF 19 D3 07 70        		[28679]=R1	// QImode move
00000E82                    	.debug
00000E82 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000E96 22 00 00 00        		.dd LM84-_Send
00000E98 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4C1                    	.code
                            	LM84:
0000A4C1 41 62              		R1=(-1)	// QImode move
0000A4C2 19 D3 08 70        		[28680]=R1	// QImode move
00000E9A                    	.debug
00000E9A 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000EAE 25 00 00 00        		.dd LM85-_Send
00000EB0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4C4                    	.code
                            	LM85:
0000A4C4 09 63 6A 30        		R1=(-12394)	// QImode move
0000A4C6 19 D3 05 70        		[28677]=R1	// QImode move
00000EB2                    	.debug
00000EB2 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000EC6 29 00 00 00        		.dd LM86-_Send
00000EC8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4C8                    	.code
                            	LM86:
0000A4C8 05 93              		R1=BP	// QImode move
0000A4C9 0D 05 07 00        		R2=BP+7
0000A4CB 40 92              		R1=0	// QImode move
0000A4CC 02 99              		R4=R2	// QImode move
0000A4CD C4 D2              		[R4]=R1	// QImode move
00000ECA                    	.debug
00000ECA 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000EDE 2F 00 00 00        		.dd LM87-_Send
00000EE0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4CE                    	.code
                            	LM87:
                            	L63:
0000A4CE 0F 9F D2 A4        		pc=L65	// Indirect jump
0000A4D0 0F 9F FD A4        		pc=L64	// Indirect jump
                            	L65:
00000EE2                    	.debug
00000EE2 2E 00 73 00        		.dw '.stabn 0x44,0,141,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         31 00 2C 00
         00 00 00 00
00000EF6 33 00 00 00        		.dd LM88-_Send
00000EF8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4D2                    	.code
                            	LM88:
0000A4D2 05 93              		R1=BP	// QImode move
0000A4D3 0D 05 07 00        		R2=BP+7
0000A4D5 05 97              		R3=BP	// QImode move
0000A4D6 0D 03 07 00        		R1=BP+7
0000A4D8 05 95              		R2=BP	// QImode move
0000A4D9 0D 07 07 00        		R3=BP+7
0000A4DB 03 99              		R4=R3	// QImode move
0000A4DC C4 94              		R2=[R4]	// QImode move
0000A4DD 0A 07 01 00        		R3=R2+1
0000A4DF 01 95              		R2=R1	// QImode move
0000A4E0 C2 D6              		[R2]=R3	// QImode move
00000EFA                    	.debug
00000EFA 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00000F0E 42 00 00 00        		.dd LM89-_Send
00000F10 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4E1                    	.code
                            	LM89:
0000A4E1 40 F0 D2 A2        		call _Delay	// call without return value
00000F12                    	.debug
00000F12 2E 00 73 00        		.dw '.stabn 0x44,0,143,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         33 00 2C 00
         00 00 00 00
00000F26 44 00 00 00        		.dd LM90-_Send
00000F28 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4E3                    	.code
                            	LM90:
0000A4E3 05 93              		R1=BP	// QImode move
0000A4E4 0D 05 07 00        		R2=BP+7
0000A4E6 02 97              		R3=R2	// QImode move
0000A4E7 C3 92              		R1=[R3]	// QImode move
0000A4E8 09 43 B8 0B        		CMP R1,3000	// QImode compare
0000A4EA 05 8E 01 EE        		NSJNA L66	//QImode LEU
         00 EE      
00000F2A                    	.debug
00000F2A 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00000F3E 4E 00 00 00        		.dd LM91-_Send
00000F40 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4ED                    	.code
                            	LM91:
0000A4ED 41 92              		R1=1	// QImode move
0000A4EE 0F 9F 62 A6        		pc=L61	// Indirect jump
                            	L66:
00000F42                    	.debug
00000F42 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000F56 51 00 00 00        		.dd LM92-_Send
00000F58 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4F0                    	.code
                            	LM92:
0000A4F0 12 95 00 70        		R2=[28672]	// QImode move
0000A4F2 0A B3 00 FF        		R1=R2&(-256)
0000A4F4 09 43 00 FC        		CMP R1,(-1024)	// QImode compare
0000A4F6 04 4E 01 EE        		NSJNZ L67	//QImode NE
         00 EE      
0000A4F9 0F 9F FD A4        		pc=L64	// Indirect jump
                            	L67:
00000F5A                    	.debug
00000F5A 2E 00 73 00        		.dw '.stabn 0x44,0,148,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         38 00 2C 00
         00 00 00 00
00000F6E 5C 00 00 00        		.dd LM93-_Send
00000F70 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4FB                    	.code
                            	LM93:
0000A4FB 0F 9F CE A4        		pc=L63	// Indirect jump
                            	L64:
00000F72                    	.debug
00000F72 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000F86 5E 00 00 00        		.dd LM94-_Send
00000F88 0D 00 0A 00        		.dw 0x0d,0x0a
0000A4FD                    	.code
                            	LM94:
0000A4FD 09 63 00 48        		R1=(-18432)	// QImode move
0000A4FF C5 D2              		[BP]=R1	// QImode move
                            	L68:
0000A500 05 93              		R1=BP	// QImode move
0000A501 0D 05 01 00        		R2=BP+1
0000A503 C5 92              		R1=[BP]	// QImode move
0000A504 02 99              		R4=R2	// QImode move
0000A505 C4 42              		CMP R1,[R4]	// QImode compare
0000A506 04 8E 01 EE        		NSJNA L71	//QImode LEU
         00 EE      
0000A509 0F 9F 2C A6        		pc=L69	// Indirect jump
                            	L71:
00000F8A                    	.debug
00000F8A 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000F9E 6C 00 00 00        		.dd LM95-_Send
00000FA0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A50B                    	.code
                            	LM95:
0000A50B 41 92              		R1=1	// QImode move
0000A50C 19 D3 12 70        		[28690]=R1	// QImode move
00000FA2                    	.debug
00000FA2 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000FB6 6F 00 00 00        		.dd LM96-_Send
00000FB8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A50E                    	.code
                            	LM96:
0000A50E C5 92              		R1=[BP]	// QImode move
0000A50F C8 D2              		[SP--]=R1	// QImode move
0000A510 40 F0 9E AB        		call _Flash_ReadWord	// call with return value
0000A512 41 00              		SP = SP + 1	//SP
0000A513 05 95              		R2=BP	// QImode move
0000A514 0D 07 02 00        		R3=BP+2
0000A516 03 95              		R2=R3	// QImode move
0000A517 C2 D2              		[R2]=R1	// QImode move
00000FBA                    	.debug
00000FBA 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000FCE 79 00 00 00        		.dd LM97-_Send
00000FD0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A518                    	.code
                            	LM97:
0000A518 40 F0 D2 A2        		call _Delay	// call without return value
00000FD2                    	.debug
00000FD2 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00000FE6 7B 00 00 00        		.dd LM98-_Send
00000FE8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A51A                    	.code
                            	LM98:
0000A51A 05 95              		R2=BP	// QImode move
0000A51B 0D 03 03 00        		R1=BP+3
0000A51D C5 96              		R3=[BP]	// QImode move
0000A51E 7B 95              		R2=R3 lsr 4
0000A51F 7A 95              		R2=R2 lsr 4
0000A520 0A B9 FF 00        		R4=R2&255
0000A522 01 97              		R3=R1	// QImode move
0000A523 C3 D8              		[R3]=R4	// QImode move
00000FEA                    	.debug
00000FEA 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000FFE 85 00 00 00        		.dd LM99-_Send
00001000 0D 00 0A 00        		.dw 0x0d,0x0a
0000A524                    	.code
                            	LM99:
0000A524 05 93              		R1=BP	// QImode move
0000A525 0D 05 03 00        		R2=BP+3
0000A527 02 97              		R3=R2	// QImode move
0000A528 C3 92              		R1=[R3]	// QImode move
0000A529 C8 D2              		[SP--]=R1	// QImode move
0000A52A 40 F0 2A A4        		call _Ebit	// call with return value
0000A52C 41 00              		SP = SP + 1	//SP
0000A52D 05 95              		R2=BP	// QImode move
0000A52E 0D 07 03 00        		R3=BP+3
0000A530 03 99              		R4=R3	// QImode move
0000A531 C4 94              		R2=[R4]	// QImode move
0000A532 01 A5              		R2|=R1
0000A533 02 93              		R1=R2	// QImode move
0000A534 19 D3 05 70        		[28677]=R1	// QImode move
00001002                    	.debug
00001002 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00001016 97 00 00 00        		.dd LM100-_Send
00001018 0D 00 0A 00        		.dw 0x0d,0x0a
0000A536                    	.code
                            	LM100:
0000A536 40 F0 D2 A2        		call _Delay	// call without return value
0000101A                    	.debug
0000101A 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
0000102E 99 00 00 00        		.dd LM101-_Send
00001030 0D 00 0A 00        		.dw 0x0d,0x0a
0000A538                    	.code
                            	LM101:
0000A538 05 93              		R1=BP	// QImode move
0000A539 0D 05 04 00        		R2=BP+4
0000A53B C5 96              		R3=[BP]	// QImode move
0000A53C 0B B9 FF 00        		R4=R3&255
0000A53E 02 97              		R3=R2	// QImode move
0000A53F C3 D8              		[R3]=R4	// QImode move
00001032                    	.debug
00001032 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00001046 A1 00 00 00        		.dd LM102-_Send
00001048 0D 00 0A 00        		.dw 0x0d,0x0a
0000A540                    	.code
                            	LM102:
0000A540 05 93              		R1=BP	// QImode move
0000A541 0D 05 04 00        		R2=BP+4
0000A543 02 99              		R4=R2	// QImode move
0000A544 C4 92              		R1=[R4]	// QImode move
0000A545 C8 D2              		[SP--]=R1	// QImode move
0000A546 40 F0 2A A4        		call _Ebit	// call with return value
0000A548 41 00              		SP = SP + 1	//SP
0000A549 05 95              		R2=BP	// QImode move
0000A54A 0D 07 04 00        		R3=BP+4
0000A54C 09 A3 00 10        		R1=R1|4096
0000A54E 03 99              		R4=R3	// QImode move
0000A54F C4 94              		R2=[R4]	// QImode move
0000A550 01 A5              		R2|=R1
0000A551 1A D5 05 70        		[28677]=R2	// QImode move
0000104A                    	.debug
0000104A 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
0000105E B4 00 00 00        		.dd LM103-_Send
00001060 0D 00 0A 00        		.dw 0x0d,0x0a
0000A553                    	.code
                            	LM103:
0000A553 40 F0 D2 A2        		call _Delay	// call without return value
00001062                    	.debug
00001062 2E 00 73 00        		.dw '.stabn 0x44,0,171,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         31 00 2C 00
         00 00 00 00
00001076 B6 00 00 00        		.dd LM104-_Send
00001078 0D 00 0A 00        		.dw 0x0d,0x0a
0000A555                    	.code
                            	LM104:
0000A555 05 95              		R2=BP	// QImode move
0000A556 0D 03 05 00        		R1=BP+5
0000A558 05 95              		R2=BP	// QImode move
0000A559 0D 07 02 00        		R3=BP+2
0000A55B 03 95              		R2=R3	// QImode move
0000A55C C2 98              		R4=[R2]	// QImode move
0000A55D 7C 95              		R2=R4 lsr 4
0000A55E 7A 95              		R2=R2 lsr 4
0000A55F 0A B9 FF 00        		R4=R2&255
0000A561 01 97              		R3=R1	// QImode move
0000A562 C3 D8              		[R3]=R4	// QImode move
0000107A                    	.debug
0000107A 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
0000108E C4 00 00 00        		.dd LM105-_Send
00001090 0D 00 0A 00        		.dw 0x0d,0x0a
0000A563                    	.code
                            	LM105:
0000A563 05 93              		R1=BP	// QImode move
0000A564 0D 05 05 00        		R2=BP+5
0000A566 02 97              		R3=R2	// QImode move
0000A567 C3 92              		R1=[R3]	// QImode move
0000A568 C8 D2              		[SP--]=R1	// QImode move
0000A569 40 F0 2A A4        		call _Ebit	// call with return value
0000A56B 41 00              		SP = SP + 1	//SP
0000A56C 05 95              		R2=BP	// QImode move
0000A56D 0D 07 05 00        		R3=BP+5
0000A56F 09 A3 00 20        		R1=R1|8192
0000A571 03 99              		R4=R3	// QImode move
0000A572 C4 94              		R2=[R4]	// QImode move
0000A573 01 A5              		R2|=R1
0000A574 1A D5 05 70        		[28677]=R2	// QImode move
00001092                    	.debug
00001092 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
000010A6 D7 00 00 00        		.dd LM106-_Send
000010A8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A576                    	.code
                            	LM106:
0000A576 40 F0 D2 A2        		call _Delay	// call without return value
000010AA                    	.debug
000010AA 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
000010BE D9 00 00 00        		.dd LM107-_Send
000010C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A578                    	.code
                            	LM107:
0000A578 05 95              		R2=BP	// QImode move
0000A579 0D 03 06 00        		R1=BP+6
0000A57B 05 95              		R2=BP	// QImode move
0000A57C 0D 07 02 00        		R3=BP+2
0000A57E 03 95              		R2=R3	// QImode move
0000A57F C2 94              		R2=[R2]	// QImode move
0000A580 0A B9 FF 00        		R4=R2&255
0000A582 01 95              		R2=R1	// QImode move
0000A583 C2 D8              		[R2]=R4	// QImode move
000010C2                    	.debug
000010C2 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
000010D6 E5 00 00 00        		.dd LM108-_Send
000010D8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A584                    	.code
                            	LM108:
0000A584 05 93              		R1=BP	// QImode move
0000A585 0D 05 06 00        		R2=BP+6
0000A587 02 97              		R3=R2	// QImode move
0000A588 C3 92              		R1=[R3]	// QImode move
0000A589 C8 D2              		[SP--]=R1	// QImode move
0000A58A 40 F0 2A A4        		call _Ebit	// call with return value
0000A58C 41 00              		SP = SP + 1	//SP
0000A58D 05 95              		R2=BP	// QImode move
0000A58E 0D 07 06 00        		R3=BP+6
0000A590 09 A3 00 30        		R1=R1|12288
0000A592 03 99              		R4=R3	// QImode move
0000A593 C4 94              		R2=[R4]	// QImode move
0000A594 01 A5              		R2|=R1
0000A595 1A D5 05 70        		[28677]=R2	// QImode move
000010DA                    	.debug
000010DA 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
000010EE F8 00 00 00        		.dd LM109-_Send
000010F0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A597                    	.code
                            	LM109:
0000A597 40 F0 D2 A2        		call _Delay	// call without return value
000010F2                    	.debug
000010F2 2E 00 73 00        		.dw '.stabn 0x44,0,177,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         37 00 2C 00
         00 00 00 00
00001106 FA 00 00 00        		.dd LM110-_Send
00001108 0D 00 0A 00        		.dw 0x0d,0x0a
0000A599                    	.code
                            	LM110:
0000A599 05 95              		R2=BP	// QImode move
0000A59A 0D 03 08 00        		R1=BP+8
0000A59C 05 95              		R2=BP	// QImode move
0000A59D 0D 07 03 00        		R3=BP+3
0000A59F 03 95              		R2=R3	// QImode move
0000A5A0 C2 94              		R2=[R2]	// QImode move
0000A5A1 62 B4              		R2=R2&34
0000A5A2 0A D4              		[bp+10]=R2	// QImode move
0000A5A3 0A 96              		R3=[bp+10]	// QImode move
0000A5A4 53 95              		R2=R3 lsl 3
0000A5A5 05 97              		R3=BP	// QImode move
0000A5A6 0D 09 04 00        		R4=BP+4
0000A5A8 0A D8              		[bp+10]=R4	// QImode move
0000A5A9 0A 96              		R3=[bp+10]	// QImode move
0000A5AA C3 96              		R3=[R3]	// QImode move
0000A5AB 62 B6              		R3=R3&34
0000A5AC 0B D6              		[bp+11]=R3	// QImode move
0000A5AD 0B 96              		R3=[bp+11]	// QImode move
0000A5AE 4B 99              		R4=R3 lsl 2
0000A5AF 04 A5              		R2|=R4
0000A5B0 05 97              		R3=BP	// QImode move
0000A5B1 0D 09 05 00        		R4=BP+5
0000A5B3 0A D8              		[bp+10]=R4	// QImode move
0000A5B4 0A 96              		R3=[bp+10]	// QImode move
0000A5B5 C3 96              		R3=[R3]	// QImode move
0000A5B6 62 B6              		R3=R3&34
0000A5B7 0B D6              		[bp+11]=R3	// QImode move
0000A5B8 0B 96              		R3=[bp+11]	// QImode move
0000A5B9 43 99              		R4=R3 lsl 1
0000A5BA 04 A5              		R2|=R4
0000A5BB 05 97              		R3=BP	// QImode move
0000A5BC 0D 09 06 00        		R4=BP+6
0000A5BE 0A D8              		[bp+10]=R4	// QImode move
0000A5BF 0A 96              		R3=[bp+10]	// QImode move
0000A5C0 C3 96              		R3=[R3]	// QImode move
0000A5C1 62 B6              		R3=R3&34
0000A5C2 0B D6              		[bp+11]=R3	// QImode move
0000A5C3 02 97              		R3=R2	// QImode move
0000A5C4 0B 98              		R4=[bp+11]	// QImode move
0000A5C5 04 A7              		R3|=R4
0000A5C6 01 99              		R4=R1	// QImode move
0000A5C7 C4 D6              		[R4]=R3	// QImode move
0000110A                    	.debug
0000110A 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
0000111E 29 01 00 00        		.dd LM111-_Send
00001120 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5C8                    	.code
                            	LM111:
0000A5C8 05 93              		R1=BP	// QImode move
0000A5C9 0D 05 08 00        		R2=BP+8
0000A5CB 02 99              		R4=R2	// QImode move
0000A5CC C4 92              		R1=[R4]	// QImode move
0000A5CD C8 D2              		[SP--]=R1	// QImode move
0000A5CE 40 F0 2A A4        		call _Ebit	// call with return value
0000A5D0 41 00              		SP = SP + 1	//SP
0000A5D1 09 A5 00 DE        		R2=R1|(-8704)
0000A5D3 1A D5 05 70        		[28677]=R2	// QImode move
00001122                    	.debug
00001122 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
00001136 36 01 00 00        		.dd LM112-_Send
00001138 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5D5                    	.code
                            	LM112:
0000A5D5 05 93              		R1=BP	// QImode move
0000A5D6 0D 05 07 00        		R2=BP+7
0000A5D8 40 92              		R1=0	// QImode move
0000A5D9 02 97              		R3=R2	// QImode move
0000A5DA C3 D2              		[R3]=R1	// QImode move
0000113A                    	.debug
0000113A 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
0000114E 3C 01 00 00        		.dd LM113-_Send
00001150 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5DB                    	.code
                            	LM113:
                            	L72:
0000A5DB 0F 9F DF A5        		pc=L74	// Indirect jump
0000A5DD 0F 9F 26 A6        		pc=L70	// Indirect jump
                            	L74:
00001152                    	.debug
00001152 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00001166 40 01 00 00        		.dd LM114-_Send
00001168 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5DF                    	.code
                            	LM114:
0000A5DF 05 93              		R1=BP	// QImode move
0000A5E0 0D 05 07 00        		R2=BP+7
0000A5E2 05 97              		R3=BP	// QImode move
0000A5E3 0D 03 07 00        		R1=BP+7
0000A5E5 05 95              		R2=BP	// QImode move
0000A5E6 0D 07 07 00        		R3=BP+7
0000A5E8 03 99              		R4=R3	// QImode move
0000A5E9 C4 94              		R2=[R4]	// QImode move
0000A5EA 0A 07 01 00        		R3=R2+1
0000A5EC 01 95              		R2=R1	// QImode move
0000A5ED C2 D6              		[R2]=R3	// QImode move
0000116A                    	.debug
0000116A 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
0000117E 4F 01 00 00        		.dd LM115-_Send
00001180 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5EE                    	.code
                            	LM115:
0000A5EE 40 F0 D2 A2        		call _Delay	// call without return value
00001182                    	.debug
00001182 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00001196 51 01 00 00        		.dd LM116-_Send
00001198 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5F0                    	.code
                            	LM116:
0000A5F0 05 93              		R1=BP	// QImode move
0000A5F1 0D 05 07 00        		R2=BP+7
0000A5F3 02 97              		R3=R2	// QImode move
0000A5F4 C3 92              		R1=[R3]	// QImode move
0000A5F5 09 43 E8 03        		CMP R1,1000	// QImode compare
0000A5F7 07 8E 01 EE        		NSJNA L75	//QImode LEU
         00 EE      
0000119A                    	.debug
0000119A 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
000011AE 5B 01 00 00        		.dd LM117-_Send
000011B0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5FA                    	.code
                            	LM117:
0000A5FA 42 92              		R1=2	// QImode move
0000A5FB 0F 9F 62 A6        		pc=L61	// Indirect jump
000011B2                    	.debug
000011B2 2E 00 73 00        		.dw '.stabn 0x44,0,188,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         38 00 2C 00
         00 00 00 00
000011C6 5E 01 00 00        		.dd LM118-_Send
000011C8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5FD                    	.code
                            	LM118:
0000A5FD 0F 9F 26 A6        		pc=L70	// Indirect jump
                            	L75:
000011CA                    	.debug
000011CA 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
000011DE 60 01 00 00        		.dd LM119-_Send
000011E0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A5FF                    	.code
                            	LM119:
0000A5FF 05 93              		R1=BP	// QImode move
0000A600 0D 05 02 00        		R2=BP+2
0000A602 11 93 00 70        		R1=[28672]	// QImode move
0000A604 09 B7 00 FF        		R3=R1&(-256)
0000A606 02 99              		R4=R2	// QImode move
0000A607 C4 D6              		[R4]=R3	// QImode move
000011E2                    	.debug
000011E2 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
000011F6 69 01 00 00        		.dd LM120-_Send
000011F8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A608                    	.code
                            	LM120:
0000A608 05 93              		R1=BP	// QImode move
0000A609 0D 05 02 00        		R2=BP+2
0000A60B 02 99              		R4=R2	// QImode move
0000A60C C4 92              		R1=[R4]	// QImode move
0000A60D 09 43 00 96        		CMP R1,(-27136)	// QImode compare
0000A60F 04 4E 01 EE        		NSJNZ L76	//QImode NE
         00 EE      
0000A612 0F 9F 26 A6        		pc=L70	// Indirect jump
                            	L76:
000011FA                    	.debug
000011FA 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
0000120E 75 01 00 00        		.dd LM121-_Send
00001210 0D 00 0A 00        		.dw 0x0d,0x0a
0000A614                    	.code
                            	LM121:
0000A614 05 93              		R1=BP	// QImode move
0000A615 0D 05 02 00        		R2=BP+2
0000A617 02 97              		R3=R2	// QImode move
0000A618 C3 92              		R1=[R3]	// QImode move
0000A619 09 43 00 9F        		CMP R1,(-24832)	// QImode compare
0000A61B 08 4E 01 EE        		NSJNZ L77	//QImode NE
         00 EE      
00001212                    	.debug
00001212 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00001226 7F 01 00 00        		.dd LM122-_Send
00001228 0D 00 0A 00        		.dw 0x0d,0x0a
0000A61E                    	.code
                            	LM122:
0000A61E C5 92              		R1=[BP]	// QImode move
0000A61F 09 05 FF FF        		R2=R1+(-1)
0000A621 C5 D4              		[BP]=R2	// QImode move
0000122A                    	.debug
0000122A 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
0000123E 83 01 00 00        		.dd LM123-_Send
00001240 0D 00 0A 00        		.dw 0x0d,0x0a
0000A622                    	.code
                            	LM123:
0000A622 0F 9F 26 A6        		pc=L70	// Indirect jump
                            	L77:
00001242                    	.debug
00001242 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00001256 85 01 00 00        		.dd LM124-_Send
00001258 0D 00 0A 00        		.dw 0x0d,0x0a
0000A624                    	.code
                            	LM124:
0000A624 0F 9F DB A5        		pc=L72	// Indirect jump
                            	L73:
0000125A                    	.debug
0000125A 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
0000126E 87 01 00 00        		.dd LM125-_Send
00001270 0D 00 0A 00        		.dw 0x0d,0x0a
0000A626                    	.code
                            	LM125:
                            	L70:
0000A626 C5 92              		R1=[BP]	// QImode move
0000A627 09 05 01 00        		R2=R1+1
0000A629 C5 D4              		[BP]=R2	// QImode move
0000A62A 0F 9F 00 A5        		pc=L68	// Indirect jump
                            	L69:
00001272                    	.debug
00001272 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
00001286 8D 01 00 00        		.dd LM126-_Send
00001288 0D 00 0A 00        		.dw 0x0d,0x0a
0000A62C                    	.code
                            	LM126:
0000A62C 09 63 6A 50        		R1=(-20586)	// QImode move
0000A62E 19 D3 05 70        		[28677]=R1	// QImode move
0000128A                    	.debug
0000128A 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
0000129E 91 01 00 00        		.dd LM127-_Send
000012A0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A630                    	.code
                            	LM127:
                            	L78:
0000A630 0F 9F 34 A6        		pc=L80	// Indirect jump
0000A632 0F 9F 5F A6        		pc=L79	// Indirect jump
                            	L80:
000012A2                    	.debug
000012A2 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
000012B6 95 01 00 00        		.dd LM128-_Send
000012B8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A634                    	.code
                            	LM128:
0000A634 05 93              		R1=BP	// QImode move
0000A635 0D 05 07 00        		R2=BP+7
0000A637 05 97              		R3=BP	// QImode move
0000A638 0D 03 07 00        		R1=BP+7
0000A63A 05 95              		R2=BP	// QImode move
0000A63B 0D 07 07 00        		R3=BP+7
0000A63D 03 99              		R4=R3	// QImode move
0000A63E C4 94              		R2=[R4]	// QImode move
0000A63F 0A 07 01 00        		R3=R2+1
0000A641 01 95              		R2=R1	// QImode move
0000A642 C2 D6              		[R2]=R3	// QImode move
000012BA                    	.debug
000012BA 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
000012CE A4 01 00 00        		.dd LM129-_Send
000012D0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A643                    	.code
                            	LM129:
0000A643 40 F0 D2 A2        		call _Delay	// call without return value
000012D2                    	.debug
000012D2 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
000012E6 A6 01 00 00        		.dd LM130-_Send
000012E8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A645                    	.code
                            	LM130:
0000A645 05 93              		R1=BP	// QImode move
0000A646 0D 05 07 00        		R2=BP+7
0000A648 02 97              		R3=R2	// QImode move
0000A649 C3 92              		R1=[R3]	// QImode move
0000A64A 09 43 E8 03        		CMP R1,1000	// QImode compare
0000A64C 05 8E 01 EE        		NSJNA L81	//QImode LEU
         00 EE      
000012EA                    	.debug
000012EA 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
000012FE B0 01 00 00        		.dd LM131-_Send
00001300 0D 00 0A 00        		.dw 0x0d,0x0a
0000A64F                    	.code
                            	LM131:
0000A64F 43 92              		R1=3	// QImode move
0000A650 0F 9F 62 A6        		pc=L61	// Indirect jump
                            	L81:
00001302                    	.debug
00001302 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
00001316 B3 01 00 00        		.dd LM132-_Send
00001318 0D 00 0A 00        		.dw 0x0d,0x0a
0000A652                    	.code
                            	LM132:
0000A652 12 95 00 70        		R2=[28672]	// QImode move
0000A654 0A B3 00 FF        		R1=R2&(-256)
0000A656 09 43 00 FA        		CMP R1,(-1536)	// QImode compare
0000A658 04 4E 01 EE        		NSJNZ L82	//QImode NE
         00 EE      
0000A65B 0F 9F 5F A6        		pc=L79	// Indirect jump
                            	L82:
0000131A                    	.debug
0000131A 2E 00 73 00        		.dw '.stabn 0x44,0,211,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         31 00 2C 00
         00 00 00 00
0000132E BE 01 00 00        		.dd LM133-_Send
00001330 0D 00 0A 00        		.dw 0x0d,0x0a
0000A65D                    	.code
                            	LM133:
0000A65D 0F 9F 30 A6        		pc=L78	// Indirect jump
                            	L79:
00001332                    	.debug
00001332 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
00001346 C0 01 00 00        		.dd LM134-_Send
00001348 0D 00 0A 00        		.dw 0x0d,0x0a
0000A65F                    	.code
                            	LM134:
0000A65F 40 92              		R1=0	// QImode move
0000A660 0F 9F 62 A6        		pc=L61	// Indirect jump
0000134A                    	.debug
0000134A 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
0000135E C3 01 00 00        		.dd LM135-_Send
00001360 0D 00 0A 00        		.dw 0x0d,0x0a
0000A662                    	.code
                            	LM135:
                            	LBE6:
00001362                    	.debug
00001362 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
00001376 C3 01 00 00        		.dd LM136-_Send
00001378 0D 00 0A 00        		.dw 0x0d,0x0a
0000A662                    	.code
                            	LM136:
                            	L61:
                            	
0000A662 4C 00              		sp+=12
0000A663 88 98              		pop bp from [sp]
0000A664 90 9A              		retf
                            		.endp	// end of Send
                            	
0000137A                    	.debug
0000137A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000138C 07 00 00 00        		.dd LBB6-_Send
0000138E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A665                    	.code
00001390                    	.debug
00001390 2E 00 73 00        		.dw '.stabs "Addr:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A665                    	.CODE
000013AB                    	.debug
000013AB 2E 00 73 00        		.dw '.stabs "EndAddr:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 6E 00
         64 00 41 00
         64 00 64 00
         72 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000A665                    	.CODE
000013C9                    	.debug
000013C9 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000A665                    	.CODE
000013E3                    	.debug
000013E3 2E 00 73 00        		.dw '.stabs "addrH:4",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 64 00
         64 00 72 00
         48 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000A665                    	.CODE
000013FF                    	.debug
000013FF 2E 00 73 00        		.dw '.stabs "addrL:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 64 00
         64 00 72 00
         4C 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A665                    	.CODE
0000141B                    	.debug
0000141B 2E 00 73 00        		.dw '.stabs "dataH:4",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         48 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000A665                    	.CODE
00001437                    	.debug
00001437 2E 00 73 00        		.dw '.stabs "dataL:4",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         4C 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000A665                    	.CODE
00001453                    	.debug
00001453 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
0000A665                    	.CODE
0000146B                    	.debug
0000146B 2E 00 73 00        		.dw '.stabs "k:4",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 38 00
         0D 00 0A 00
0000A665                    	.CODE
00001483                    	.debug
00001483 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001495 C3 01 00 00        		.dd LBE6-_Send
00001497 0D 00 0A 00        		.dw 0x0d,0x0a
0000A665                    	.code
00001499                    	.debug
00001499 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000014A2 C6 01 00 00        		.dd LME6-_Send
000014A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A665                    	.code
                            	LME6:
0000A665                    	.code
000014A6                    	.debug
000014A6 2E 00 73 00        		.dw '.stabs "Accept:F1",36,0,0,',0,0,offset _Accept,seg _Accept,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 63 00
         63 00 65 00
         70 00 74 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         93 03 00 00
         0D 00 0A 00
0000A665                    	.CODE
                            	.public _Accept
                            	_Accept:	.proc
000014C6                    	.debug
000014C6 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
000014DA 00 00 00 00        		.dd LM137-_Accept
000014DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A665                    	.code
                            	LM137:
                            		// total=13, vars=13
                            		// frame_pointer_needed: 1
0000A665 88 DA              		push bp to [sp]
0000A666 4D 20              		sp-=13
0000A667 08 0B 01 00        		bp=sp+1
                            	
0000A669 0D 03 10 00        		R1=BP+16
0000A66B 0A D2              		[bp+10]=R1	// QImode move
000014DE                    	.debug
000014DE 2E 00 73 00        		.dw '.stabn 0x44,0,222,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         32 00 2C 00
         00 00 00 00
000014F2 07 00 00 00        		.dd LM138-_Accept
000014F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A66C                    	.code
                            	LM138:
                            	LBB7:
000014F6                    	.debug
000014F6 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
0000150A 07 00 00 00        		.dd LM139-_Accept
0000150C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A66C                    	.code
                            	LM139:
0000A66C 05 93              		R1=BP	// QImode move
0000A66D 0D 05 01 00        		R2=BP+1
0000A66F 40 92              		R1=0	// QImode move
0000A670 02 97              		R3=R2	// QImode move
0000A671 C3 D2              		[R3]=R1	// QImode move
0000150E                    	.debug
0000150E 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
00001522 0D 00 00 00        		.dd LM140-_Accept
00001524 0D 00 0A 00        		.dw 0x0d,0x0a
0000A672                    	.code
                            	LM140:
0000A672 05 93              		R1=BP	// QImode move
0000A673 0D 05 09 00        		R2=BP+9
0000A675 40 92              		R1=0	// QImode move
0000A676 02 99              		R4=R2	// QImode move
0000A677 C4 D2              		[R4]=R1	// QImode move
00001526                    	.debug
00001526 2E 00 73 00        		.dw '.stabn 0x44,0,234,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         34 00 2C 00
         00 00 00 00
0000153A 13 00 00 00        		.dd LM141-_Accept
0000153C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A678                    	.code
                            	LM141:
0000A678 11 93 05 70        		R1=[28677]	// QImode move
0000A67A 09 43 96 CF        		CMP R1,(-12394)	// QImode compare
0000A67C 05 5E 01 EE        		NSJZ L93	//QImode EQ
         00 EE      
0000A67F 41 92              		R1=1	// QImode move
0000A680 0F 9F 9A A8        		pc=L92	// Indirect jump
                            	L93:
0000153E                    	.debug
0000153E 2E 00 73 00        		.dw '.stabn 0x44,0,236,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         36 00 2C 00
         00 00 00 00
00001552 1D 00 00 00        		.dd LM142-_Accept
00001554 0D 00 0A 00        		.dw 0x0d,0x0a
0000A682                    	.code
                            	LM142:
0000A682 43 92              		R1=3	// QImode move
0000A683 C8 D2              		[SP--]=R1	// QImode move
0000A684 42 92              		R1=2	// QImode move
0000A685 C8 D2              		[SP--]=R1	// QImode move
0000A686 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A688 42 00              		SP = SP + 2	//SP
00001556                    	.debug
00001556 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
0000156A 24 00 00 00        		.dd LM143-_Accept
0000156C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A689                    	.code
                            	LM143:
0000A689 05 93              		R1=BP	// QImode move
0000A68A 0D 05 06 00        		R2=BP+6
0000A68C 09 63 00 48        		R1=(-18432)	// QImode move
0000A68E 02 97              		R3=R2	// QImode move
0000A68F C3 D2              		[R3]=R1	// QImode move
                            	L94:
0000A690 05 93              		R1=BP	// QImode move
0000A691 0D 05 06 00        		R2=BP+6
0000A693 02 99              		R4=R2	// QImode move
0000A694 C4 92              		R1=[R4]	// QImode move
0000A695 09 43 FF FB        		CMP R1,(-1025)	// QImode compare
0000A697 04 8E 01 EE        		NSJNA L97	//QImode LEU
         00 EE      
0000A69A 0F 9F B6 A6        		pc=L95	// Indirect jump
                            	L97:
0000156E                    	.debug
0000156E 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
00001582 37 00 00 00        		.dd LM144-_Accept
00001584 0D 00 0A 00        		.dw 0x0d,0x0a
0000A69C                    	.code
                            	LM144:
0000A69C 05 93              		R1=BP	// QImode move
0000A69D 0D 05 06 00        		R2=BP+6
0000A69F 02 97              		R3=R2	// QImode move
0000A6A0 C3 92              		R1=[R3]	// QImode move
0000A6A1 C8 D2              		[SP--]=R1	// QImode move
0000A6A2 40 F0 8A AB        		call _Flash_Erase	// call without return value
0000A6A4 41 00              		SP = SP + 1	//SP
00001586                    	.debug
00001586 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
0000159A 40 00 00 00        		.dd LM145-_Accept
0000159C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6A5                    	.code
                            	LM145:
0000A6A5 41 92              		R1=1	// QImode move
0000A6A6 19 D3 12 70        		[28690]=R1	// QImode move
0000159E                    	.debug
0000159E 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
000015B2 43 00 00 00        		.dd LM146-_Accept
000015B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6A8                    	.code
                            	LM146:
                            	L96:
0000A6A8 05 95              		R2=BP	// QImode move
0000A6A9 0D 03 06 00        		R1=BP+6
0000A6AB 05 95              		R2=BP	// QImode move
0000A6AC 0D 07 06 00        		R3=BP+6
0000A6AE 03 99              		R4=R3	// QImode move
0000A6AF C4 94              		R2=[R4]	// QImode move
0000A6B0 0A 07 00 01        		R3=R2+256
0000A6B2 01 95              		R2=R1	// QImode move
0000A6B3 C2 D6              		[R2]=R3	// QImode move
0000A6B4 0F 9F 90 A6        		pc=L94	// Indirect jump
                            	L95:
000015B6                    	.debug
000015B6 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
000015CA 51 00 00 00        		.dd LM147-_Accept
000015CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6B6                    	.code
                            	LM147:
0000A6B6 41 62              		R1=(-1)	// QImode move
0000A6B7 19 D3 02 70        		[28674]=R1	// QImode move
000015CE                    	.debug
000015CE 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
000015E2 54 00 00 00        		.dd LM148-_Accept
000015E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6B9                    	.code
                            	LM148:
0000A6B9 41 62              		R1=(-1)	// QImode move
0000A6BA 19 D3 03 70        		[28675]=R1	// QImode move
000015E6                    	.debug
000015E6 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
000015FA 57 00 00 00        		.dd LM149-_Accept
000015FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6BC                    	.code
                            	LM149:
0000A6BC 09 63 00 04        		R1=(-1024)	// QImode move
0000A6BE 19 D3 00 70        		[28672]=R1	// QImode move
000015FE                    	.debug
000015FE 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
00001612 5B 00 00 00        		.dd LM150-_Accept
00001614 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6C0                    	.code
                            	LM150:
                            	L98:
0000A6C0 0F 9F C4 A6        		pc=L100	// Indirect jump
0000A6C2 0F 9F 97 A8        		pc=L99	// Indirect jump
                            	L100:
00001616                    	.debug
00001616 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
0000162A 5F 00 00 00        		.dd LM151-_Accept
0000162C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6C4                    	.code
                            	LM151:
0000A6C4 41 92              		R1=1	// QImode move
0000A6C5 19 D3 12 70        		[28690]=R1	// QImode move
0000162E                    	.debug
0000162E 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
00001642 62 00 00 00        		.dd LM152-_Accept
00001644 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6C7                    	.code
                            	LM152:
0000A6C7 11 93 05 70        		R1=[28677]	// QImode move
0000A6C9 C5 D2              		[BP]=R1	// QImode move
00001646                    	.debug
00001646 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
0000165A 65 00 00 00        		.dd LM153-_Accept
0000165C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6CA                    	.code
                            	LM153:
0000A6CA 05 93              		R1=BP	// QImode move
0000A6CB 0D 05 01 00        		R2=BP+1
0000A6CD C5 92              		R1=[BP]	// QImode move
0000A6CE 02 97              		R3=R2	// QImode move
0000A6CF C3 42              		CMP R1,[R3]	// QImode compare
0000A6D0 06 4E 01 EE        		NSJNZ L101	//QImode NE
         00 EE      
0000A6D3 0F 9F C0 A6        		pc=L98	// Indirect jump
0000A6D5 0F 9F DD A6        		pc=L102	// Indirect jump
                            	L101:
0000165E                    	.debug
0000165E 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
00001672 72 00 00 00        		.dd LM154-_Accept
00001674 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6D7                    	.code
                            	LM154:
0000A6D7 05 93              		R1=BP	// QImode move
0000A6D8 0D 05 01 00        		R2=BP+1
0000A6DA C5 92              		R1=[BP]	// QImode move
0000A6DB 02 99              		R4=R2	// QImode move
0000A6DC C4 D2              		[R4]=R1	// QImode move
                            	L102:
00001676                    	.debug
00001676 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
0000168A 78 00 00 00        		.dd LM155-_Accept
0000168C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6DD                    	.code
                            	LM155:
0000A6DD C5 92              		R1=[BP]	// QImode move
0000A6DE 09 43 96 CF        		CMP R1,(-12394)	// QImode compare
0000A6E0 08 4E 01 EE        		NSJNZ L103	//QImode NE
         00 EE      
0000168E                    	.debug
0000168E 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
000016A2 7E 00 00 00        		.dd LM156-_Accept
000016A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E3                    	.code
                            	LM156:
0000A6E3 09 63 00 04        		R1=(-1024)	// QImode move
0000A6E5 19 D3 00 70        		[28672]=R1	// QImode move
000016A6                    	.debug
000016A6 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
000016BA 82 00 00 00        		.dd LM157-_Accept
000016BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E7                    	.code
                            	LM157:
0000A6E7 0F 9F C0 A6        		pc=L98	// Indirect jump
                            	L103:
000016BE                    	.debug
000016BE 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
000016D2 84 00 00 00        		.dd LM158-_Accept
000016D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E9                    	.code
                            	LM158:
0000A6E9 C5 92              		R1=[BP]	// QImode move
0000A6EA 09 43 96 AF        		CMP R1,(-20586)	// QImode compare
0000A6EC 22 4E 01 EE        		NSJNZ L104	//QImode NE
         00 EE      
000016D6                    	.debug
000016D6 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
000016EA 8A 00 00 00        		.dd LM159-_Accept
000016EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6EF                    	.code
                            	LM159:
0000A6EF 09 63 00 06        		R1=(-1536)	// QImode move
0000A6F1 19 D3 00 70        		[28672]=R1	// QImode move
000016EE                    	.debug
000016EE 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
00001702 8E 00 00 00        		.dd LM160-_Accept
00001704 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F3                    	.code
                            	LM160:
0000A6F3 05 93              		R1=BP	// QImode move
0000A6F4 0D 05 06 00        		R2=BP+6
0000A6F6 05 97              		R3=BP	// QImode move
0000A6F7 0D 03 06 00        		R1=BP+6
0000A6F9 05 95              		R2=BP	// QImode move
0000A6FA 0D 07 06 00        		R3=BP+6
0000A6FC 03 99              		R4=R3	// QImode move
0000A6FD C4 94              		R2=[R4]	// QImode move
0000A6FE 0A 07 01 00        		R3=R2+1
0000A700 01 95              		R2=R1	// QImode move
0000A701 C2 D6              		[R2]=R3	// QImode move
00001706                    	.debug
00001706 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
0000171A 9D 00 00 00        		.dd LM161-_Accept
0000171C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A702                    	.code
                            	LM161:
0000A702 41 62              		R1=(-1)	// QImode move
0000A703 C8 D2              		[SP--]=R1	// QImode move
0000A704 05 93              		R1=BP	// QImode move
0000A705 0D 05 06 00        		R2=BP+6
0000A707 02 97              		R3=R2	// QImode move
0000A708 C3 92              		R1=[R3]	// QImode move
0000A709 C8 D2              		[SP--]=R1	// QImode move
0000A70A 40 F0 56 AB        		call _Flash_WriteWord	// call without return value
0000A70C 42 00              		SP = SP + 2	//SP
0000171E                    	.debug
0000171E 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
00001732 A8 00 00 00        		.dd LM162-_Accept
00001734 0D 00 0A 00        		.dw 0x0d,0x0a
0000A70D                    	.code
                            	LM162:
0000A70D 0F 9F 97 A8        		pc=L99	// Indirect jump
                            	L104:
00001736                    	.debug
00001736 2E 00 73 00        		.dw '.stabn 0x44,0,284,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         34 00 2C 00
         00 00 00 00
0000174A AA 00 00 00        		.dd LM163-_Accept
0000174C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A70F                    	.code
                            	LM163:
0000A70F C5 98              		R4=[BP]	// QImode move
0000A710 0C B3 00 FE        		R1=R4&(-512)
0000A712 09 43 00 DE        		CMP R1,(-8704)	// QImode compare
0000A714 02 5E 0F 9F        		NSJNZ L105	//QImode NE
         B6 A7      
0000174E                    	.debug
0000174E 2E 00 73 00        		.dw '.stabn 0x44,0,286,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         36 00 2C 00
         00 00 00 00
00001762 B2 00 00 00        		.dd LM164-_Accept
00001764 0D 00 0A 00        		.dw 0x0d,0x0a
0000A717                    	.code
                            	LM164:
0000A717 05 95              		R2=BP	// QImode move
0000A718 0D 03 08 00        		R1=BP+8
0000A71A 05 95              		R2=BP	// QImode move
0000A71B 0D 07 02 00        		R3=BP+2
0000A71D 03 95              		R2=R3	// QImode move
0000A71E C2 94              		R2=[R2]	// QImode move
0000A71F 62 B4              		R2=R2&34
0000A720 0B D4              		[bp+11]=R2	// QImode move
0000A721 0B 96              		R3=[bp+11]	// QImode move
0000A722 53 95              		R2=R3 lsl 3
0000A723 05 97              		R3=BP	// QImode move
0000A724 0D 09 03 00        		R4=BP+3
0000A726 0B D8              		[bp+11]=R4	// QImode move
0000A727 0B 96              		R3=[bp+11]	// QImode move
0000A728 C3 96              		R3=[R3]	// QImode move
0000A729 62 B6              		R3=R3&34
0000A72A 0C D6              		[bp+12]=R3	// QImode move
0000A72B 0C 96              		R3=[bp+12]	// QImode move
0000A72C 4B 99              		R4=R3 lsl 2
0000A72D 04 A5              		R2|=R4
0000A72E 05 97              		R3=BP	// QImode move
0000A72F 0D 09 04 00        		R4=BP+4
0000A731 0B D8              		[bp+11]=R4	// QImode move
0000A732 0B 96              		R3=[bp+11]	// QImode move
0000A733 C3 96              		R3=[R3]	// QImode move
0000A734 62 B6              		R3=R3&34
0000A735 0C D6              		[bp+12]=R3	// QImode move
0000A736 0C 96              		R3=[bp+12]	// QImode move
0000A737 43 99              		R4=R3 lsl 1
0000A738 04 A5              		R2|=R4
0000A739 05 97              		R3=BP	// QImode move
0000A73A 0D 09 05 00        		R4=BP+5
0000A73C 0B D8              		[bp+11]=R4	// QImode move
0000A73D 0B 96              		R3=[bp+11]	// QImode move
0000A73E C3 96              		R3=[R3]	// QImode move
0000A73F 62 B6              		R3=R3&34
0000A740 0C D6              		[bp+12]=R3	// QImode move
0000A741 02 97              		R3=R2	// QImode move
0000A742 0C 98              		R4=[bp+12]	// QImode move
0000A743 04 A7              		R3|=R4
0000A744 01 99              		R4=R1	// QImode move
0000A745 C4 D6              		[R4]=R3	// QImode move
00001766                    	.debug
00001766 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
0000177A E1 00 00 00        		.dd LM165-_Accept
0000177C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A746                    	.code
                            	LM165:
0000A746 05 93              		R1=BP	// QImode move
0000A747 0D 05 08 00        		R2=BP+8
0000A749 02 99              		R4=R2	// QImode move
0000A74A C4 92              		R1=[R4]	// QImode move
0000A74B C8 D2              		[SP--]=R1	// QImode move
0000A74C 40 F0 2A A4        		call _Ebit	// call with return value
0000A74E 41 00              		SP = SP + 1	//SP
0000A74F 09 A5 00 DE        		R2=R1|(-8704)
0000A751 C5 92              		R1=[BP]	// QImode move
0000A752 02 43              		CMP R1,R2	// QImode compare
0000A753 02 5E 0F 9F        		NSJNZ L106	//QImode NE
         AC A7      
0000A756 05 93              		R1=BP	// QImode move
0000A757 0D 05 09 00        		R2=BP+9
0000A759 02 97              		R3=R2	// QImode move
0000A75A C3 96              		R3=[R3]	// QImode move
0000A75B 0B B3 0F 00        		R1=R3&15
0000A75D 4F 42              		CMP R1,15	// QImode compare
0000A75E 02 5E 0F 9F        		NSJNZ L106	//QImode NE
         AC A7      
0000177E                    	.debug
0000177E 2E 00 73 00        		.dw '.stabn 0x44,0,289,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         39 00 2C 00
         00 00 00 00
00001792 FC 00 00 00        		.dd LM166-_Accept
00001794 0D 00 0A 00        		.dw 0x0d,0x0a
0000A761                    	.code
                            	LM166:
0000A761 05 95              		R2=BP	// QImode move
0000A762 0D 03 06 00        		R1=BP+6
0000A764 05 95              		R2=BP	// QImode move
0000A765 0D 07 02 00        		R3=BP+2
0000A767 03 95              		R2=R3	// QImode move
0000A768 C2 98              		R4=[R2]	// QImode move
0000A769 5C 95              		R2=R4 lsl 4
0000A76A 5A 95              		R2=R2 lsl 4
0000A76B 05 97              		R3=BP	// QImode move
0000A76C 0D 09 03 00        		R4=BP+3
0000A76E 04 97              		R3=R4	// QImode move
0000A76F C3 04              		R2 = R2 + [R3]	//addqi3
0000A770 01 99              		R4=R1	// QImode move
0000A771 C4 D4              		[R4]=R2	// QImode move
00001796                    	.debug
00001796 2E 00 73 00        		.dw '.stabn 0x44,0,290,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         30 00 2C 00
         00 00 00 00
000017AA 0D 01 00 00        		.dd LM167-_Accept
000017AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A772                    	.code
                            	LM167:
0000A772 05 95              		R2=BP	// QImode move
0000A773 0D 03 07 00        		R1=BP+7
0000A775 05 95              		R2=BP	// QImode move
0000A776 0D 07 04 00        		R3=BP+4
0000A778 03 95              		R2=R3	// QImode move
0000A779 C2 98              		R4=[R2]	// QImode move
0000A77A 5C 95              		R2=R4 lsl 4
0000A77B 5A 95              		R2=R2 lsl 4
0000A77C 05 97              		R3=BP	// QImode move
0000A77D 0D 09 05 00        		R4=BP+5
0000A77F 04 97              		R3=R4	// QImode move
0000A780 C3 04              		R2 = R2 + [R3]	//addqi3
0000A781 01 99              		R4=R1	// QImode move
0000A782 C4 D4              		[R4]=R2	// QImode move
000017AE                    	.debug
000017AE 2E 00 73 00        		.dw '.stabn 0x44,0,291,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         31 00 2C 00
         00 00 00 00
000017C2 1E 01 00 00        		.dd LM168-_Accept
000017C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A783                    	.code
                            	LM168:
0000A783 05 93              		R1=BP	// QImode move
0000A784 0D 05 06 00        		R2=BP+6
0000A786 02 97              		R3=R2	// QImode move
0000A787 C3 92              		R1=[R3]	// QImode move
0000A788 09 43 FF B7        		CMP R1,(-18433)	// QImode compare
0000A78A 1B 8E 01 EE        		NSJNA L107	//QImode LEU
         00 EE      
0000A78D 05 93              		R1=BP	// QImode move
0000A78E 0D 05 06 00        		R2=BP+6
0000A790 02 99              		R4=R2	// QImode move
0000A791 C4 92              		R1=[R4]	// QImode move
0000A792 09 43 FF FB        		CMP R1,(-1025)	// QImode compare
0000A794 11 9E 01 EE        		NSJA L107	//QImode GTU
         00 EE      
000017C6                    	.debug
000017C6 2E 00 73 00        		.dw '.stabn 0x44,0,292,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         32 00 2C 00
         00 00 00 00
000017DA 32 01 00 00        		.dd LM169-_Accept
000017DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A797                    	.code
                            	LM169:
0000A797 05 93              		R1=BP	// QImode move
0000A798 0D 05 07 00        		R2=BP+7
0000A79A 02 97              		R3=R2	// QImode move
0000A79B C3 92              		R1=[R3]	// QImode move
0000A79C C8 D2              		[SP--]=R1	// QImode move
0000A79D 05 93              		R1=BP	// QImode move
0000A79E 0D 05 06 00        		R2=BP+6
0000A7A0 02 99              		R4=R2	// QImode move
0000A7A1 C4 92              		R1=[R4]	// QImode move
0000A7A2 C8 D2              		[SP--]=R1	// QImode move
0000A7A3 40 F0 56 AB        		call _Flash_WriteWord	// call without return value
0000A7A5 42 00              		SP = SP + 2	//SP
                            	L107:
000017DE                    	.debug
000017DE 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
000017F2 41 01 00 00        		.dd LM170-_Accept
000017F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A6                    	.code
                            	LM170:
0000A7A6 09 63 00 6A        		R1=(-27136)	// QImode move
0000A7A8 19 D3 00 70        		[28672]=R1	// QImode move
000017F6                    	.debug
000017F6 2E 00 73 00        		.dw '.stabn 0x44,0,294,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         34 00 2C 00
         00 00 00 00
0000180A 45 01 00 00        		.dd LM171-_Accept
0000180C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7AA                    	.code
                            	LM171:
0000A7AA 0F 9F B0 A7        		pc=L108	// Indirect jump
                            	L106:
0000180E                    	.debug
0000180E 2E 00 73 00        		.dw '.stabn 0x44,0,297,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         37 00 2C 00
         00 00 00 00
00001822 47 01 00 00        		.dd LM172-_Accept
00001824 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7AC                    	.code
                            	LM172:
0000A7AC 09 63 00 61        		R1=(-24832)	// QImode move
0000A7AE 19 D3 00 70        		[28672]=R1	// QImode move
                            	L108:
00001826                    	.debug
00001826 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
0000183A 4B 01 00 00        		.dd LM173-_Accept
0000183C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B0                    	.code
                            	LM173:
0000A7B0 05 93              		R1=BP	// QImode move
0000A7B1 0D 05 09 00        		R2=BP+9
0000A7B3 40 92              		R1=0	// QImode move
0000A7B4 02 97              		R3=R2	// QImode move
0000A7B5 C3 D2              		[R3]=R1	// QImode move
                            	L105:
0000183E                    	.debug
0000183E 2E 00 73 00        		.dw '.stabn 0x44,0,302,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         32 00 2C 00
         00 00 00 00
00001852 51 01 00 00        		.dd LM174-_Accept
00001854 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B6                    	.code
                            	LM174:
0000A7B6 C5 98              		R4=[BP]	// QImode move
0000A7B7 0C B3 00 30        		R1=R4&12288
0000A7B9 09 43 00 10        		CMP R1,4096	// QImode compare
0000A7BB 02 4E 0F 9F        		NSJZ L112	//QImode EQ
         05 A8      
0000A7BE 09 43 00 10        		CMP R1,4096	// QImode compare
0000A7C0 08 9E 01 EE        		NSJA L120	//QImode GTU
         00 EE      
0000A7C3 40 42              		CMP R1,0	// QImode test
0000A7C4 10 5E 01 EE        		NSJZ L110	//QImode EQ
         00 EE      
0000A7C7 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L120:
0000A7C9 09 43 00 20        		CMP R1,8192	// QImode compare
0000A7CB 02 4E 0F 9F        		NSJZ L114	//QImode EQ
         35 A8      
0000A7CE 09 43 00 30        		CMP R1,12288	// QImode compare
0000A7D0 02 4E 0F 9F        		NSJZ L116	//QImode EQ
         65 A8      
0000A7D3 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L110:
00001856                    	.debug
00001856 2E 00 73 00        		.dw '.stabn 0x44,0,306,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         36 00 2C 00
         00 00 00 00
0000186A 70 01 00 00        		.dd LM175-_Accept
0000186C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7D5                    	.code
                            	LM175:
0000A7D5 05 93              		R1=BP	// QImode move
0000A7D6 0D 05 08 00        		R2=BP+8
0000A7D8 C5 92              		R1=[BP]	// QImode move
0000A7D9 09 B7 FF 00        		R3=R1&255
0000A7DB 02 93              		R1=R2	// QImode move
0000A7DC C1 D6              		[R1]=R3	// QImode move
0000186E                    	.debug
0000186E 2E 00 73 00        		.dw '.stabn 0x44,0,307,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         37 00 2C 00
         00 00 00 00
00001882 78 01 00 00        		.dd LM176-_Accept
00001884 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7DD                    	.code
                            	LM176:
0000A7DD 05 93              		R1=BP	// QImode move
0000A7DE 0D 05 08 00        		R2=BP+8
0000A7E0 02 97              		R3=R2	// QImode move
0000A7E1 C3 92              		R1=[R3]	// QImode move
0000A7E2 C8 D2              		[SP--]=R1	// QImode move
0000A7E3 40 F0 2A A4        		call _Ebit	// call with return value
0000A7E5 41 00              		SP = SP + 1	//SP
0000A7E6 C5 98              		R4=[BP]	// QImode move
0000A7E7 0C B5 FF 01        		R2=R4&511
0000A7E9 02 43              		CMP R1,R2	// QImode compare
0000A7EA 18 4E 01 EE        		NSJNZ L111	//QImode NE
         00 EE      
00001886                    	.debug
00001886 2E 00 73 00        		.dw '.stabn 0x44,0,308,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         38 00 2C 00
         00 00 00 00
0000189A 88 01 00 00        		.dd LM177-_Accept
0000189C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7ED                    	.code
                            	LM177:
0000A7ED 05 95              		R2=BP	// QImode move
0000A7EE 0D 03 02 00        		R1=BP+2
0000A7F0 05 95              		R2=BP	// QImode move
0000A7F1 0D 07 08 00        		R3=BP+8
0000A7F3 03 99              		R4=R3	// QImode move
0000A7F4 C4 94              		R2=[R4]	// QImode move
0000A7F5 01 97              		R3=R1	// QImode move
0000A7F6 C3 D4              		[R3]=R2	// QImode move
0000189E                    	.debug
0000189E 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
000018B2 92 01 00 00        		.dd LM178-_Accept
000018B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7F7                    	.code
                            	LM178:
0000A7F7 05 95              		R2=BP	// QImode move
0000A7F8 0D 03 09 00        		R1=BP+9
0000A7FA 05 95              		R2=BP	// QImode move
0000A7FB 0D 07 09 00        		R3=BP+9
0000A7FD 03 99              		R4=R3	// QImode move
0000A7FE C4 98              		R4=[R4]	// QImode move
0000A7FF 0C A5 01 00        		R2=R4|1
0000A801 01 99              		R4=R1	// QImode move
0000A802 C4 D4              		[R4]=R2	// QImode move
                            	L111:
000018B6                    	.debug
000018B6 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
000018CA 9E 01 00 00        		.dd LM179-_Accept
000018CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A803                    	.code
                            	LM179:
0000A803 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L112:
000018CE                    	.debug
000018CE 2E 00 73 00        		.dw '.stabn 0x44,0,314,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         34 00 2C 00
         00 00 00 00
000018E2 A0 01 00 00        		.dd LM180-_Accept
000018E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A805                    	.code
                            	LM180:
0000A805 05 93              		R1=BP	// QImode move
0000A806 0D 05 08 00        		R2=BP+8
0000A808 C5 92              		R1=[BP]	// QImode move
0000A809 09 B7 FF 00        		R3=R1&255
0000A80B 02 93              		R1=R2	// QImode move
0000A80C C1 D6              		[R1]=R3	// QImode move
000018E6                    	.debug
000018E6 2E 00 73 00        		.dw '.stabn 0x44,0,315,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         35 00 2C 00
         00 00 00 00
000018FA A8 01 00 00        		.dd LM181-_Accept
000018FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A80D                    	.code
                            	LM181:
0000A80D 05 93              		R1=BP	// QImode move
0000A80E 0D 05 08 00        		R2=BP+8
0000A810 02 97              		R3=R2	// QImode move
0000A811 C3 92              		R1=[R3]	// QImode move
0000A812 C8 D2              		[SP--]=R1	// QImode move
0000A813 40 F0 2A A4        		call _Ebit	// call with return value
0000A815 41 00              		SP = SP + 1	//SP
0000A816 C5 98              		R4=[BP]	// QImode move
0000A817 0C B5 FF 01        		R2=R4&511
0000A819 02 43              		CMP R1,R2	// QImode compare
0000A81A 18 4E 01 EE        		NSJNZ L113	//QImode NE
         00 EE      
000018FE                    	.debug
000018FE 2E 00 73 00        		.dw '.stabn 0x44,0,316,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         36 00 2C 00
         00 00 00 00
00001912 B8 01 00 00        		.dd LM182-_Accept
00001914 0D 00 0A 00        		.dw 0x0d,0x0a
0000A81D                    	.code
                            	LM182:
0000A81D 05 95              		R2=BP	// QImode move
0000A81E 0D 03 03 00        		R1=BP+3
0000A820 05 95              		R2=BP	// QImode move
0000A821 0D 07 08 00        		R3=BP+8
0000A823 03 99              		R4=R3	// QImode move
0000A824 C4 94              		R2=[R4]	// QImode move
0000A825 01 97              		R3=R1	// QImode move
0000A826 C3 D4              		[R3]=R2	// QImode move
00001916                    	.debug
00001916 2E 00 73 00        		.dw '.stabn 0x44,0,317,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         37 00 2C 00
         00 00 00 00
0000192A C2 01 00 00        		.dd LM183-_Accept
0000192C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A827                    	.code
                            	LM183:
0000A827 05 95              		R2=BP	// QImode move
0000A828 0D 03 09 00        		R1=BP+9
0000A82A 05 95              		R2=BP	// QImode move
0000A82B 0D 07 09 00        		R3=BP+9
0000A82D 03 99              		R4=R3	// QImode move
0000A82E C4 98              		R4=[R4]	// QImode move
0000A82F 0C A5 02 00        		R2=R4|2
0000A831 01 99              		R4=R1	// QImode move
0000A832 C4 D4              		[R4]=R2	// QImode move
                            	L113:
0000192E                    	.debug
0000192E 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001942 CE 01 00 00        		.dd LM184-_Accept
00001944 0D 00 0A 00        		.dw 0x0d,0x0a
0000A833                    	.code
                            	LM184:
0000A833 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L114:
00001946                    	.debug
00001946 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
0000195A D0 01 00 00        		.dd LM185-_Accept
0000195C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A835                    	.code
                            	LM185:
0000A835 05 93              		R1=BP	// QImode move
0000A836 0D 05 08 00        		R2=BP+8
0000A838 C5 92              		R1=[BP]	// QImode move
0000A839 09 B7 FF 00        		R3=R1&255
0000A83B 02 93              		R1=R2	// QImode move
0000A83C C1 D6              		[R1]=R3	// QImode move
0000195E                    	.debug
0000195E 2E 00 73 00        		.dw '.stabn 0x44,0,323,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         33 00 2C 00
         00 00 00 00
00001972 D8 01 00 00        		.dd LM186-_Accept
00001974 0D 00 0A 00        		.dw 0x0d,0x0a
0000A83D                    	.code
                            	LM186:
0000A83D 05 93              		R1=BP	// QImode move
0000A83E 0D 05 08 00        		R2=BP+8
0000A840 02 97              		R3=R2	// QImode move
0000A841 C3 92              		R1=[R3]	// QImode move
0000A842 C8 D2              		[SP--]=R1	// QImode move
0000A843 40 F0 2A A4        		call _Ebit	// call with return value
0000A845 41 00              		SP = SP + 1	//SP
0000A846 C5 98              		R4=[BP]	// QImode move
0000A847 0C B5 FF 01        		R2=R4&511
0000A849 02 43              		CMP R1,R2	// QImode compare
0000A84A 18 4E 01 EE        		NSJNZ L115	//QImode NE
         00 EE      
00001976                    	.debug
00001976 2E 00 73 00        		.dw '.stabn 0x44,0,324,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         34 00 2C 00
         00 00 00 00
0000198A E8 01 00 00        		.dd LM187-_Accept
0000198C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A84D                    	.code
                            	LM187:
0000A84D 05 95              		R2=BP	// QImode move
0000A84E 0D 03 04 00        		R1=BP+4
0000A850 05 95              		R2=BP	// QImode move
0000A851 0D 07 08 00        		R3=BP+8
0000A853 03 99              		R4=R3	// QImode move
0000A854 C4 94              		R2=[R4]	// QImode move
0000A855 01 97              		R3=R1	// QImode move
0000A856 C3 D4              		[R3]=R2	// QImode move
0000198E                    	.debug
0000198E 2E 00 73 00        		.dw '.stabn 0x44,0,325,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         35 00 2C 00
         00 00 00 00
000019A2 F2 01 00 00        		.dd LM188-_Accept
000019A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A857                    	.code
                            	LM188:
0000A857 05 95              		R2=BP	// QImode move
0000A858 0D 03 09 00        		R1=BP+9
0000A85A 05 95              		R2=BP	// QImode move
0000A85B 0D 07 09 00        		R3=BP+9
0000A85D 03 99              		R4=R3	// QImode move
0000A85E C4 98              		R4=[R4]	// QImode move
0000A85F 0C A5 04 00        		R2=R4|4
0000A861 01 99              		R4=R1	// QImode move
0000A862 C4 D4              		[R4]=R2	// QImode move
                            	L115:
000019A6                    	.debug
000019A6 2E 00 73 00        		.dw '.stabn 0x44,0,327,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         37 00 2C 00
         00 00 00 00
000019BA FE 01 00 00        		.dd LM189-_Accept
000019BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A863                    	.code
                            	LM189:
0000A863 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L116:
000019BE                    	.debug
000019BE 2E 00 73 00        		.dw '.stabn 0x44,0,330,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         30 00 2C 00
         00 00 00 00
000019D2 00 02 00 00        		.dd LM190-_Accept
000019D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A865                    	.code
                            	LM190:
0000A865 05 93              		R1=BP	// QImode move
0000A866 0D 05 08 00        		R2=BP+8
0000A868 C5 92              		R1=[BP]	// QImode move
0000A869 09 B7 FF 00        		R3=R1&255
0000A86B 02 93              		R1=R2	// QImode move
0000A86C C1 D6              		[R1]=R3	// QImode move
000019D6                    	.debug
000019D6 2E 00 73 00        		.dw '.stabn 0x44,0,331,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         31 00 2C 00
         00 00 00 00
000019EA 08 02 00 00        		.dd LM191-_Accept
000019EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A86D                    	.code
                            	LM191:
0000A86D 05 93              		R1=BP	// QImode move
0000A86E 0D 05 08 00        		R2=BP+8
0000A870 02 97              		R3=R2	// QImode move
0000A871 C3 92              		R1=[R3]	// QImode move
0000A872 C8 D2              		[SP--]=R1	// QImode move
0000A873 40 F0 2A A4        		call _Ebit	// call with return value
0000A875 41 00              		SP = SP + 1	//SP
0000A876 C5 98              		R4=[BP]	// QImode move
0000A877 0C B5 FF 01        		R2=R4&511
0000A879 02 43              		CMP R1,R2	// QImode compare
0000A87A 18 4E 01 EE        		NSJNZ L117	//QImode NE
         00 EE      
000019EE                    	.debug
000019EE 2E 00 73 00        		.dw '.stabn 0x44,0,332,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         32 00 2C 00
         00 00 00 00
00001A02 18 02 00 00        		.dd LM192-_Accept
00001A04 0D 00 0A 00        		.dw 0x0d,0x0a
0000A87D                    	.code
                            	LM192:
0000A87D 05 95              		R2=BP	// QImode move
0000A87E 0D 03 05 00        		R1=BP+5
0000A880 05 95              		R2=BP	// QImode move
0000A881 0D 07 08 00        		R3=BP+8
0000A883 03 99              		R4=R3	// QImode move
0000A884 C4 94              		R2=[R4]	// QImode move
0000A885 01 97              		R3=R1	// QImode move
0000A886 C3 D4              		[R3]=R2	// QImode move
00001A06                    	.debug
00001A06 2E 00 73 00        		.dw '.stabn 0x44,0,333,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         33 00 2C 00
         00 00 00 00
00001A1A 22 02 00 00        		.dd LM193-_Accept
00001A1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A887                    	.code
                            	LM193:
0000A887 05 95              		R2=BP	// QImode move
0000A888 0D 03 09 00        		R1=BP+9
0000A88A 05 95              		R2=BP	// QImode move
0000A88B 0D 07 09 00        		R3=BP+9
0000A88D 03 99              		R4=R3	// QImode move
0000A88E C4 98              		R4=[R4]	// QImode move
0000A88F 0C A5 08 00        		R2=R4|8
0000A891 01 99              		R4=R1	// QImode move
0000A892 C4 D4              		[R4]=R2	// QImode move
                            	L117:
00001A1E                    	.debug
00001A1E 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
00001A32 2E 02 00 00        		.dd LM194-_Accept
00001A34 0D 00 0A 00        		.dw 0x0d,0x0a
0000A893                    	.code
                            	LM194:
0000A893 0F 9F 95 A8        		pc=L109	// Indirect jump
                            	L119:
                            	L109:
00001A36                    	.debug
00001A36 2E 00 73 00        		.dw '.stabn 0x44,0,337,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         37 00 2C 00
         00 00 00 00
00001A4A 30 02 00 00        		.dd LM195-_Accept
00001A4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A895                    	.code
                            	LM195:
0000A895 0F 9F C0 A6        		pc=L98	// Indirect jump
                            	L99:
00001A4E                    	.debug
00001A4E 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001A62 32 02 00 00        		.dd LM196-_Accept
00001A64 0D 00 0A 00        		.dw 0x0d,0x0a
0000A897                    	.code
                            	LM196:
0000A897 40 92              		R1=0	// QImode move
0000A898 0F 9F 9A A8        		pc=L92	// Indirect jump
00001A66                    	.debug
00001A66 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
00001A7A 35 02 00 00        		.dd LM197-_Accept
00001A7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89A                    	.code
                            	LM197:
                            	LBE7:
00001A7E                    	.debug
00001A7E 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
00001A92 35 02 00 00        		.dd LM198-_Accept
00001A94 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89A                    	.code
                            	LM198:
                            	L92:
                            	
0000A89A 4D 00              		sp+=13
0000A89B 88 98              		pop bp from [sp]
0000A89C 90 9A              		retf
                            		.endp	// end of Accept
                            	
00001A96                    	.debug
00001A96 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001AA8 07 00 00 00        		.dd LBB7-_Accept
00001AAA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89D                    	.code
00001AAC                    	.debug
00001AAC 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A89D                    	.CODE
00001AC6                    	.debug
00001AC6 2E 00 73 00        		.dw '.stabs "last:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 61 00
         73 00 74 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000A89D                    	.CODE
00001AE1                    	.debug
00001AE1 2E 00 73 00        		.dw '.stabs "addrH:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 64 00
         64 00 72 00
         48 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000A89D                    	.CODE
00001AFD                    	.debug
00001AFD 2E 00 73 00        		.dw '.stabs "addrL:4",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 64 00
         64 00 72 00
         4C 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000A89D                    	.CODE
00001B19                    	.debug
00001B19 2E 00 73 00        		.dw '.stabs "dataH:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         48 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A89D                    	.CODE
00001B35                    	.debug
00001B35 2E 00 73 00        		.dw '.stabs "dataL:4",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         4C 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000A89D                    	.CODE
00001B51                    	.debug
00001B51 2E 00 73 00        		.dw '.stabs "Addr:4",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000A89D                    	.CODE
00001B6C                    	.debug
00001B6C 2E 00 73 00        		.dw '.stabs "Data:4",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 61 00
         74 00 61 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         37 00 0D 00
         0A 00      
0000A89D                    	.CODE
00001B87                    	.debug
00001B87 2E 00 73 00        		.dw '.stabs "k:4",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 38 00
         0D 00 0A 00
0000A89D                    	.CODE
00001B9F                    	.debug
00001B9F 2E 00 73 00        		.dw '.stabs "rounds:4",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 6F 00
         75 00 6E 00
         64 00 73 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         39 00 0D 00
         0A 00      
0000A89D                    	.CODE
00001BBC                    	.debug
00001BBC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BCE 35 02 00 00        		.dd LBE7-_Accept
00001BD0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89D                    	.code
00001BD2                    	.debug
00001BD2 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001BDB 38 02 00 00        		.dd LME7-_Accept
00001BDD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89D                    	.code
                            	LME7:
0000A89D                    	.code
00001BDF                    	.debug
00001BDF 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         CB 05 00 00
         0D 00 0A 00
0000A89D                    	.CODE
                            	.public _main
                            	_main:	.proc
00001BFD                    	.debug
00001BFD 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
00001C11 00 00 00 00        		.dd LM199-_main
00001C13 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89D                    	.code
                            	LM199:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000A89D 88 DA              		push bp to [sp]
0000A89E 43 20              		sp-=3
0000A89F 08 0B 01 00        		bp=sp+1
                            	
0000A8A1 0D 03 06 00        		R1=BP+6
0000A8A3 02 D2              		[bp+2]=R1	// QImode move
00001C15                    	.debug
00001C15 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
00001C29 07 00 00 00        		.dd LM200-_main
00001C2B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8A4                    	.code
                            	LM200:
                            	LBB8:
00001C2D                    	.debug
00001C2D 2E 00 73 00        		.dw '.stabn 0x44,0,347,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         37 00 2C 00
         00 00 00 00
00001C41 07 00 00 00        		.dd LM201-_main
00001C43 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8A4                    	.code
                            	LM201:
                            	L141:
0000A8A4 0F 9F A8 A8        		pc=L143	// Indirect jump
0000A8A6 0F 9F 76 A9        		pc=L142	// Indirect jump
                            	L143:
00001C45                    	.debug
00001C45 2E 00 73 00        		.dw '.stabn 0x44,0,349,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         39 00 2C 00
         00 00 00 00
00001C59 0B 00 00 00        		.dd LM202-_main
00001C5B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8A8                    	.code
                            	LM202:
0000A8A8 40 92              		R1=0	// QImode move
0000A8A9 19 D3 02 70        		[28674]=R1	// QImode move
00001C5D                    	.debug
00001C5D 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
00001C71 0E 00 00 00        		.dd LM203-_main
00001C73 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8AB                    	.code
                            	LM203:
0000A8AB 40 92              		R1=0	// QImode move
0000A8AC 19 D3 03 70        		[28675]=R1	// QImode move
00001C75                    	.debug
00001C75 2E 00 73 00        		.dw '.stabn 0x44,0,352,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         32 00 2C 00
         00 00 00 00
00001C89 11 00 00 00        		.dd LM204-_main
00001C8B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8AE                    	.code
                            	LM204:
0000A8AE 40 92              		R1=0	// QImode move
0000A8AF 19 D3 07 70        		[28679]=R1	// QImode move
00001C8D                    	.debug
00001C8D 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
00001CA1 14 00 00 00        		.dd LM205-_main
00001CA3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8B1                    	.code
                            	LM205:
0000A8B1 40 92              		R1=0	// QImode move
0000A8B2 19 D3 08 70        		[28680]=R1	// QImode move
00001CA5                    	.debug
00001CA5 2E 00 73 00        		.dw '.stabn 0x44,0,355,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         35 00 2C 00
         00 00 00 00
00001CB9 17 00 00 00        		.dd LM206-_main
00001CBB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8B4                    	.code
                            	LM206:
0000A8B4 40 F0 65 A6        		call _Accept	// call with return value
0000A8B6 C5 D2              		[BP]=R1	// QImode move
00001CBD                    	.debug
00001CBD 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
00001CD1 1A 00 00 00        		.dd LM207-_main
00001CD3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8B7                    	.code
                            	LM207:
0000A8B7 C5 92              		R1=[BP]	// QImode move
0000A8B8 40 42              		CMP R1,0	// QImode test
0000A8B9 0C 5E 01 EE        		NSJZ L145	//QImode EQ
         00 EE      
0000A8BC 43 42              		CMP R1,3	// QImode compare
0000A8BD 1A 9E 01 EE        		NSJA L144	//QImode GTU
         00 EE      
0000A8C0 42 42              		CMP R1,2	// QImode compare
0000A8C1 16 0E 01 EE        		NSJB L144	//QImode LTU
         00 EE      
0000A8C4 0F 9F CF A8        		pc=L147	// Indirect jump
                            	L145:
00001CD5                    	.debug
00001CD5 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
00001CE9 29 00 00 00        		.dd LM208-_main
00001CEB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8C6                    	.code
                            	LM208:
0000A8C6 43 92              		R1=3	// QImode move
0000A8C7 C8 D2              		[SP--]=R1	// QImode move
0000A8C8 42 92              		R1=2	// QImode move
0000A8C9 C8 D2              		[SP--]=R1	// QImode move
0000A8CA 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A8CC 42 00              		SP = SP + 2	//SP
00001CED                    	.debug
00001CED 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
00001D01 30 00 00 00        		.dd LM209-_main
00001D03 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8CD                    	.code
                            	LM209:
0000A8CD 0F 9F D8 A8        		pc=L144	// Indirect jump
                            	L146:
                            	L147:
00001D05                    	.debug
00001D05 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
00001D19 32 00 00 00        		.dd LM210-_main
00001D1B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8CF                    	.code
                            	LM210:
0000A8CF 43 92              		R1=3	// QImode move
0000A8D0 C8 D2              		[SP--]=R1	// QImode move
0000A8D1 41 92              		R1=1	// QImode move
0000A8D2 C8 D2              		[SP--]=R1	// QImode move
0000A8D3 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A8D5 42 00              		SP = SP + 2	//SP
00001D1D                    	.debug
00001D1D 2E 00 73 00        		.dw '.stabn 0x44,0,364,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         34 00 2C 00
         00 00 00 00
00001D31 39 00 00 00        		.dd LM211-_main
00001D33 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8D6                    	.code
                            	LM211:
0000A8D6 0F 9F D8 A8        		pc=L144	// Indirect jump
                            	L149:
                            	L144:
00001D35                    	.debug
00001D35 2E 00 73 00        		.dw '.stabn 0x44,0,367,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         37 00 2C 00
         00 00 00 00
00001D49 3B 00 00 00        		.dd LM212-_main
00001D4B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8D8                    	.code
                            	LM212:
0000A8D8 11 93 00 70        		R1=[28672]	// QImode move
0000A8DA C5 D2              		[BP]=R1	// QImode move
00001D4D                    	.debug
00001D4D 2E 00 73 00        		.dw '.stabn 0x44,0,368,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         38 00 2C 00
         00 00 00 00
00001D61 3E 00 00 00        		.dd LM213-_main
00001D63 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8DB                    	.code
                            	LM213:
0000A8DB C5 94              		R2=[BP]	// QImode move
0000A8DC 0A B3 01 00        		R1=R2&1
0000A8DE 40 42              		CMP R1,0	// QImode test
0000A8DF 29 5E 01 EE        		NSJZ L150	//QImode EQ
         00 EE      
00001D65                    	.debug
00001D65 2E 00 73 00        		.dw '.stabn 0x44,0,370,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         30 00 2C 00
         00 00 00 00
00001D79 45 00 00 00        		.dd LM214-_main
00001D7B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E2                    	.code
                            	LM214:
0000A8E2 40 F0 A9 A3        		call _Record	// call without return value
00001D7D                    	.debug
00001D7D 2E 00 73 00        		.dw '.stabn 0x44,0,371,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         31 00 2C 00
         00 00 00 00
00001D91 47 00 00 00        		.dd LM215-_main
00001D93 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E4                    	.code
                            	LM215:
0000A8E4 05 93              		R1=BP	// QImode move
0000A8E5 0D 05 01 00        		R2=BP+1
0000A8E7 40 92              		R1=0	// QImode move
0000A8E8 02 97              		R3=R2	// QImode move
0000A8E9 C3 D2              		[R3]=R1	// QImode move
                            	L151:
0000A8EA 05 93              		R1=BP	// QImode move
0000A8EB 0D 05 01 00        		R2=BP+1
0000A8ED 02 99              		R4=R2	// QImode move
0000A8EE C4 92              		R1=[R4]	// QImode move
0000A8EF 09 43 63 00        		CMP R1,99	// QImode compare
0000A8F1 04 8E 01 EE        		NSJNA L154	//QImode LEU
         00 EE      
0000A8F4 0F 9F 09 A9        		pc=L150	// Indirect jump
                            	L154:
0000A8F6 40 F0 D2 A2        		call _Delay	// call without return value
                            	L153:
0000A8F8 05 93              		R1=BP	// QImode move
0000A8F9 0D 05 01 00        		R2=BP+1
0000A8FB 05 97              		R3=BP	// QImode move
0000A8FC 0D 03 01 00        		R1=BP+1
0000A8FE 05 95              		R2=BP	// QImode move
0000A8FF 0D 07 01 00        		R3=BP+1
0000A901 03 99              		R4=R3	// QImode move
0000A902 C4 94              		R2=[R4]	// QImode move
0000A903 0A 07 01 00        		R3=R2+1
0000A905 01 95              		R2=R1	// QImode move
0000A906 C2 D6              		[R2]=R3	// QImode move
0000A907 0F 9F EA A8        		pc=L151	// Indirect jump
                            	L152:
                            	L150:
00001D95                    	.debug
00001D95 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
00001DA9 6C 00 00 00        		.dd LM216-_main
00001DAB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A909                    	.code
                            	LM216:
0000A909 C5 96              		R3=[BP]	// QImode move
0000A90A 0B B3 02 00        		R1=R3&2
0000A90C 40 42              		CMP R1,0	// QImode test
0000A90D 3C 5E 01 EE        		NSJZ L155	//QImode EQ
         00 EE      
00001DAD                    	.debug
00001DAD 2E 00 73 00        		.dw '.stabn 0x44,0,375,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         35 00 2C 00
         00 00 00 00
00001DC1 73 00 00 00        		.dd LM217-_main
00001DC3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A910                    	.code
                            	LM217:
                            	L156:
0000A910 0F 9F 14 A9        		pc=L158	// Indirect jump
0000A912 0F 9F 23 A9        		pc=L157	// Indirect jump
                            	L158:
00001DC5                    	.debug
00001DC5 2E 00 73 00        		.dw '.stabn 0x44,0,377,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         37 00 2C 00
         00 00 00 00
00001DD9 77 00 00 00        		.dd LM218-_main
00001DDB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A914                    	.code
                            	LM218:
0000A914 41 92              		R1=1	// QImode move
0000A915 19 D3 12 70        		[28690]=R1	// QImode move
00001DDD                    	.debug
00001DDD 2E 00 73 00        		.dw '.stabn 0x44,0,378,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         38 00 2C 00
         00 00 00 00
00001DF1 7A 00 00 00        		.dd LM219-_main
00001DF3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A917                    	.code
                            	LM219:
0000A917 12 95 00 70        		R2=[28672]	// QImode move
0000A919 0A B3 02 00        		R1=R2&2
0000A91B 40 42              		CMP R1,0	// QImode test
0000A91C 04 4E 01 EE        		NSJNZ L159	//QImode NE
         00 EE      
00001DF5                    	.debug
00001DF5 2E 00 73 00        		.dw '.stabn 0x44,0,380,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         30 00 2C 00
         00 00 00 00
00001E09 82 00 00 00        		.dd LM220-_main
00001E0B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A91F                    	.code
                            	LM220:
0000A91F 0F 9F 23 A9        		pc=L157	// Indirect jump
                            	L159:
00001E0D                    	.debug
00001E0D 2E 00 73 00        		.dw '.stabn 0x44,0,382,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         32 00 2C 00
         00 00 00 00
00001E21 84 00 00 00        		.dd LM221-_main
00001E23 0D 00 0A 00        		.dw 0x0d,0x0a
0000A921                    	.code
                            	LM221:
0000A921 0F 9F 10 A9        		pc=L156	// Indirect jump
                            	L157:
00001E25                    	.debug
00001E25 2E 00 73 00        		.dw '.stabn 0x44,0,383,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         33 00 2C 00
         00 00 00 00
00001E39 86 00 00 00        		.dd LM222-_main
00001E3B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A923                    	.code
                            	LM222:
0000A923 40 F0 1F A3        		call _PlayRecord	// call without return value
00001E3D                    	.debug
00001E3D 2E 00 73 00        		.dw '.stabn 0x44,0,384,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         34 00 2C 00
         00 00 00 00
00001E51 88 00 00 00        		.dd LM223-_main
00001E53 0D 00 0A 00        		.dw 0x0d,0x0a
0000A925                    	.code
                            	LM223:
0000A925 05 93              		R1=BP	// QImode move
0000A926 0D 05 01 00        		R2=BP+1
0000A928 40 92              		R1=0	// QImode move
0000A929 02 99              		R4=R2	// QImode move
0000A92A C4 D2              		[R4]=R1	// QImode move
                            	L160:
0000A92B 05 93              		R1=BP	// QImode move
0000A92C 0D 05 01 00        		R2=BP+1
0000A92E 02 97              		R3=R2	// QImode move
0000A92F C3 92              		R1=[R3]	// QImode move
0000A930 09 43 63 00        		CMP R1,99	// QImode compare
0000A932 04 8E 01 EE        		NSJNA L163	//QImode LEU
         00 EE      
0000A935 0F 9F 4A A9        		pc=L155	// Indirect jump
                            	L163:
0000A937 40 F0 D2 A2        		call _Delay	// call without return value
                            	L162:
0000A939 05 93              		R1=BP	// QImode move
0000A93A 0D 05 01 00        		R2=BP+1
0000A93C 05 97              		R3=BP	// QImode move
0000A93D 0D 03 01 00        		R1=BP+1
0000A93F 05 95              		R2=BP	// QImode move
0000A940 0D 07 01 00        		R3=BP+1
0000A942 03 99              		R4=R3	// QImode move
0000A943 C4 94              		R2=[R4]	// QImode move
0000A944 0A 07 01 00        		R3=R2+1
0000A946 01 95              		R2=R1	// QImode move
0000A947 C2 D6              		[R2]=R3	// QImode move
0000A948 0F 9F 2B A9        		pc=L160	// Indirect jump
                            	L161:
                            	L155:
00001E55                    	.debug
00001E55 2E 00 73 00        		.dw '.stabn 0x44,0,386,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         36 00 2C 00
         00 00 00 00
00001E69 AD 00 00 00        		.dd LM224-_main
00001E6B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A94A                    	.code
                            	LM224:
0000A94A C5 96              		R3=[BP]	// QImode move
0000A94B 0B B3 04 00        		R1=R3&4
0000A94D 40 42              		CMP R1,0	// QImode test
0000A94E 22 5E 01 EE        		NSJZ L164	//QImode EQ
         00 EE      
00001E6D                    	.debug
00001E6D 2E 00 73 00        		.dw '.stabn 0x44,0,388,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         38 00 2C 00
         00 00 00 00
00001E81 B4 00 00 00        		.dd LM225-_main
00001E83 0D 00 0A 00        		.dw 0x0d,0x0a
0000A951                    	.code
                            	LM225:
0000A951 40 F0 9F A4        		call _Send	// call with return value
0000A953 C5 D2              		[BP]=R1	// QImode move
00001E85                    	.debug
00001E85 2E 00 73 00        		.dw '.stabn 0x44,0,389,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         39 00 2C 00
         00 00 00 00
00001E99 B7 00 00 00        		.dd LM226-_main
00001E9B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A954                    	.code
                            	LM226:
0000A954 C5 92              		R1=[BP]	// QImode move
0000A955 40 42              		CMP R1,0	// QImode test
0000A956 08 5E 01 EE        		NSJZ L166	//QImode EQ
         00 EE      
0000A959 43 42              		CMP R1,3	// QImode compare
0000A95A 16 9E 01 EE        		NSJA L164	//QImode GTU
         00 EE      
0000A95D 0F 9F 68 A9        		pc=L169	// Indirect jump
                            	L166:
00001E9D                    	.debug
00001E9D 2E 00 73 00        		.dw '.stabn 0x44,0,392,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         32 00 2C 00
         00 00 00 00
00001EB1 C2 00 00 00        		.dd LM227-_main
00001EB3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A95F                    	.code
                            	LM227:
0000A95F 43 92              		R1=3	// QImode move
0000A960 C8 D2              		[SP--]=R1	// QImode move
0000A961 40 92              		R1=0	// QImode move
0000A962 C8 D2              		[SP--]=R1	// QImode move
0000A963 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A965 42 00              		SP = SP + 2	//SP
00001EB5                    	.debug
00001EB5 2E 00 73 00        		.dw '.stabn 0x44,0,393,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         33 00 2C 00
         00 00 00 00
00001EC9 C9 00 00 00        		.dd LM228-_main
00001ECB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A966                    	.code
                            	LM228:
0000A966 0F 9F 71 A9        		pc=L164	// Indirect jump
                            	L167:
                            	L168:
                            	L169:
00001ECD                    	.debug
00001ECD 2E 00 73 00        		.dw '.stabn 0x44,0,397,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         37 00 2C 00
         00 00 00 00
00001EE1 CB 00 00 00        		.dd LM229-_main
00001EE3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A968                    	.code
                            	LM229:
0000A968 43 92              		R1=3	// QImode move
0000A969 C8 D2              		[SP--]=R1	// QImode move
0000A96A 41 92              		R1=1	// QImode move
0000A96B C8 D2              		[SP--]=R1	// QImode move
0000A96C 40 F0 EE A2        		call _PlaySnd_Auto	// call without return value
0000A96E 42 00              		SP = SP + 2	//SP
00001EE5                    	.debug
00001EE5 2E 00 73 00        		.dw '.stabn 0x44,0,398,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         38 00 2C 00
         00 00 00 00
00001EF9 D2 00 00 00        		.dd LM230-_main
00001EFB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A96F                    	.code
                            	LM230:
0000A96F 0F 9F 71 A9        		pc=L164	// Indirect jump
                            	L171:
                            	L165:
                            	L164:
00001EFD                    	.debug
00001EFD 2E 00 73 00        		.dw '.stabn 0x44,0,401,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         31 00 2C 00
         00 00 00 00
00001F11 D4 00 00 00        		.dd LM231-_main
00001F13 0D 00 0A 00        		.dw 0x0d,0x0a
0000A971                    	.code
                            	LM231:
0000A971 41 92              		R1=1	// QImode move
0000A972 19 D3 12 70        		[28690]=R1	// QImode move
00001F15                    	.debug
00001F15 2E 00 73 00        		.dw '.stabn 0x44,0,402,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         32 00 2C 00
         00 00 00 00
00001F29 D7 00 00 00        		.dd LM232-_main
00001F2B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A974                    	.code
                            	LM232:
0000A974 0F 9F A4 A8        		pc=L141	// Indirect jump
                            	L142:
00001F2D                    	.debug
00001F2D 2E 00 73 00        		.dw '.stabn 0x44,0,403,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         33 00 2C 00
         00 00 00 00
00001F41 D9 00 00 00        		.dd LM233-_main
00001F43 0D 00 0A 00        		.dw 0x0d,0x0a
0000A976                    	.code
                            	LM233:
                            	LBE8:
00001F45                    	.debug
00001F45 2E 00 73 00        		.dw '.stabn 0x44,0,403,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         33 00 2C 00
         00 00 00 00
00001F59 D9 00 00 00        		.dd LM234-_main
00001F5B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A976                    	.code
                            	LM234:
                            	L140:
                            	
0000A976 43 00              		sp+=3
0000A977 88 98              		pop bp from [sp]
0000A978 90 9A              		retf
                            		.endp	// end of main
                            	
00001F5D                    	.debug
00001F5D 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001F6F 07 00 00 00        		.dd LBB8-_main
00001F71 0D 00 0A 00        		.dw 0x0d,0x0a
0000A979                    	.code
00001F73                    	.debug
00001F73 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A979                    	.CODE
00001F8D                    	.debug
00001F8D 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000A979                    	.CODE
00001FA5                    	.debug
00001FA5 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001FB7 D9 00 00 00        		.dd LBE8-_main
00001FB9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A979                    	.code
00001FBB                    	.debug
00001FBB 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001FC4 DC 00 00 00        		.dd LME8-_main
00001FC6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A979                    	.code
                            	LME8:
                            	.external _Flash_WriteWord
                            	.external _SACM_DVR_FetchQueue
                            	.external _SACM_DVR_Encoder
                            	.external _SACM_DVR_InitEncoder
                            	.external _Flash_Erase
                            	.external _SACM_DVR_Decoder
                            	.external _SACM_DVR_Stop
                            	.external _SACM_DVR_Status
                            	.external _SACM_DVR_FillQueue
                            	.external _SACM_DVR_TestQueue
                            	.external _Flash_ReadWord
                            	.external _SACM_DVR_InitDecoder
                            	.external _SACM_DVR_InitQueue
                            	.external _SACM_DVR_Initial
                            	.external _SACM_S480_Stop
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            		.end
0 error(s), 0 warning(s).

